{
  "openapi": "3.0.0",
  "servers": [
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://virtserver.swaggerhub.com/itznarendar/AlertSearch-API/1.0.0"
    },
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://virtserver.swaggerhub.com/atul.goel/SearchAlerts/1.0.0"
    }
  ],
  "info": {
    "description": "Search API to search for alerts data",
    "version": "1.0.0",
    "title": "Alert Search API",
    "contact": {
      "email": "you@your-company.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "admins",
      "description": "Secured Admin-only calls"
    },
    {
      "name": "developers",
      "description": "Operations available to regular developers"
    }
  ],
  "paths": {
    "/alerts": {
      "post": {
        "tags": [
          "developers"
        ],
        "summary": "Searches alerts database for alerts data",
        "operationId": "searchAlert",
        "description": "By passing in the appropriate options, you can search for\nalerts raised in the system.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/SearchResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AlertSearch": {
        "type": "object",
        "required": [
          "startDate",
          "endDate"
        ],
        "properties": {
          "alertType": {
            "type": "array",
            "description": "filter alerts with specific types only",
            "items": {
              "type": "string"
            },
            "example": [
              "TradeMdified",
              "TradeExecuted",
              "TradeCancelled"
            ]
          },
          "masterAccount": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "80337930",
              "80337721"
            ]
          },
          "alertSubject": {
            "type": "string",
            "example": "New Account Open"
          },
          "startDate": {
            "type": "string",
            "description": "Start date range for fetching the alerts",
            "example": "2023-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "End date range for fetching the alerts",
            "example": "2023-03-01"
          },
          "query": {
            "type": "string",
            "description": "Search Query Text, Pass text for substring match; Pass without wildcards for exact match.\n1. For listing all active alerts for the logged user query=*\n2. For searching field names such as search by column_name pass query=column_names:value\n3. For complex search operation use Logical operator AND, OR, NOT, LT, GT  query=query_text AND advisor:tony AND alerttype:TradeExecuted. Logical operators such as AND, OR, LT must be in uppercase",
            "example": "new"
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 500,
            "description": "page number to paginate the result",
            "example": 1
          },
          "limit": {
            "type": "number",
            "description": "maximum number of records to return in one page",
            "example": 100
          },
          "sortfield": {
            "type": "string",
            "description": "Sort the search results by field",
            "example": "alertType"
          },
          "sortOrder": {
            "type": "string",
            "description": "Sort order asc for ascending or desc for descending, defaults to desc",
            "example": "asc"
          }
        }
      },
      "SearchResult": {
        "type": "object",
        "required": [
          "status",
          "count",
          "page",
          "data"
        ],
        "properties": {
          "status": {
            "type": "string",
            "example": "OK"
          },
          "count": {
            "type": "integer",
            "example": 500
          },
          "page": {
            "type": "integer",
            "example": 10
          },
          "totalPage": {
            "type": "integer",
            "example": 100
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Alert"
            }
          }
        }
      },
      "Alert": {
        "type": "object",
        "required": [
          "alertId",
          "alertType",
          "active",
          "alertCreationDate",
          "account",
          "masterAccount",
          "alertDetail"
        ],
        "properties": {
          "alertId": {
            "type": "string",
            "format": "uuid",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "alertType": {
            "type": "string",
            "example": "TradeExecuted"
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "alertCreationDate": {
            "type": "string",
            "format": "date-time",
            "example": "2016-08-29T09:12:33.001Z"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "masterAccount": {
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          },
          "alertDetail": {
            "$ref": "#/components/schemas/AlertDetail"
          }
        }
      },
      "AlertDetail": {
        "required": [
          "subject"
        ],
        "properties": {
          "subject": {
            "type": "string",
            "example": "ACME Corporation"
          },
          "attributes": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "Account": {
        "required": [
          "name",
          "id"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Schwab"
          },
          "id": {
            "type": "string",
            "example": "schwab001"
          },
          "phone": {
            "type": "string",
            "example": "408-867-5309"
          }
        },
        "type": "object"
      }
    }
  }
}