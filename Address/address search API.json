{
  "openapi": "3.0.0",
  "info": {
    "description": "This is an API for searching addresses (\"adresní místa\") in the Czech registry RUIAN (Registry of Territorial Identification, Addresses and Real Estates).",
    "version": "1.0.0-oas3",
    "title": "address search API",
    "contact": {
      "email": "letomas1998@gmail.com"
    }
  },
  "tags": [
    {
      "name": "Addresses"
    },
    {
      "name": "Suggestions"
    }
  ],
  "paths": {
    "/addresses": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "search address by address code",
        "operationId": "searchAddressByCode",
        "description": "By passing the admCode parameter, you can find addresses that have their code\nstarting with the parameter's value.\n",
        "parameters": [
          {
            "in": "query",
            "name": "admCode",
            "description": "A number with which the address code could should begin with",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 215
          }
        ],
        "responses": {
          "200": {
            "description": "Page containing addresses matching the criteria",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page"
                }
              }
            }
          },
          "400": {
            "description": "Required String parameter 'admCode' is not present"
          }
        }
      }
    },
    "/addresses/{admCode}": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "information for address",
        "operationId": "getAddressDetail",
        "description": "Returns information for an address given it's unique identifier as a path parameter.",
        "parameters": [
          {
            "in": "path",
            "name": "admCode",
            "description": "Address's unique identifier (*kód adresního místa*).",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 28344987
          }
        ],
        "responses": {
          "200": {
            "description": "Address with matching address code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameter"
          }
        }
      }
    },
    "/addresses/search": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "search address by address elements",
        "operationId": "searchAddresses",
        "parameters": [
          {
            "in": "query",
            "name": "city",
            "description": "Specify address's city (*obec*)",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "Praha"
          },
          {
            "in": "query",
            "name": "district",
            "description": "Specify address's district (*část obce*)",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "Břevnov"
          },
          {
            "in": "query",
            "name": "street",
            "description": "Specify address's street (*ulice*)",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "Olympijská"
          },
          {
            "in": "query",
            "name": "houseNumber",
            "description": "Specify address's house number (*číslo domovní*), orientational number(*číslo orientační*) or both",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "House Number": {
                "value": 1901
              },
              "Orientational Number": {
                "value": 5
              },
              "House and Orientational Number": {
                "value": "2390/2a"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Page of addresses matching the given query.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page"
                }
              }
            }
          }
        }
      }
    },
    "/addresses/nearby": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "search addresses nearby a point",
        "operationId": "findNearbyAddresses",
        "description": "Given GPS coordinates of a point in decimal degrees, finds addresses within a radius defined by distance.\n",
        "parameters": [
          {
            "in": "query",
            "name": "x",
            "description": "Coordinate X in decimal degrees.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "example": 49.675549
          },
          {
            "in": "query",
            "name": "y",
            "description": "Coordinate Y in decimal degrees.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "example": 13.223479
          },
          {
            "in": "query",
            "name": "distance",
            "description": "Distance in kilometers. Defines radius of the search.",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "example": 0.2
          }
        ],
        "responses": {
          "200": {
            "description": "Page of addresses within the given distance of the point.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page"
                }
              }
            }
          },
          "400": {
            "description": "Bad input parameters"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Page": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "pageable": {
            "type": "object",
            "properties": {
              "sort": {
                "$ref": "#/components/schemas/Sort"
              },
              "pageNumber": {
                "type": "integer",
                "example": 0
              },
              "pageSize": {
                "type": "integer",
                "example": 10
              },
              "offset": {
                "type": "integer",
                "example": 0
              },
              "unpaged": {
                "type": "boolean",
                "example": false
              },
              "paged": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "facetResultPages": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": []
          },
          "facetQueryResult": {
            "$ref": "#/components/schemas/FacetQueryResult"
          },
          "highlited": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "maxScore": {
            "type": "object",
            "example": null
          },
          "fieldStatsResults": {
            "type": "object",
            "example": {}
          },
          "suggestions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "alternatives": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "facetFields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "facetPivotFields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "totalElements": {
            "type": "integer",
            "example": 1
          },
          "totalPages": {
            "type": "integer",
            "example": 1
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "numberOfElements": {
            "type": "integer",
            "example": 10
          },
          "first": {
            "type": "boolean",
            "example": true
          },
          "last": {
            "type": "boolean",
            "example": true
          },
          "size": {
            "type": "integer",
            "example": 10
          },
          "number": {
            "type": "integer",
            "example": 0
          },
          "empty": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "Address": {
        "type": "object",
        "required": [
          "id",
          "admCode",
          "cityName",
          "buildingType",
          "houseNumber",
          "postalCode",
          "identification"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "ee913b3e-d8ef-4422-8b17-42f6871479ee"
          },
          "admCode": {
            "type": "integer",
            "example": 2198371
          },
          "cityName": {
            "type": "string",
            "example": "Praha"
          },
          "boroughName": {
            "type": "string",
            "example": "Praha 6"
          },
          "pragueBoroughName": {
            "type": "string",
            "example": "Praha 6"
          },
          "districtName": {
            "type": "string",
            "example": "Dejvice"
          },
          "streetName": {
            "type": "string",
            "example": "Na Fišerce"
          },
          "buildingType": {
            "type": "string",
            "enum": [
              "č.p.",
              "č.ev."
            ],
            "example": "č.p."
          },
          "houseNumber": {
            "type": "integer",
            "example": 22
          },
          "orientationalNumber": {
            "type": "integer",
            "example": 15
          },
          "orientationalNumberLetter": {
            "type": "string",
            "example": "a"
          },
          "postalCode": {
            "type": "integer",
            "example": 16000
          },
          "coordinateX": {
            "type": "number",
            "format": "double",
            "example": 1039875.33
          },
          "coordinateY": {
            "type": "number",
            "format": "double",
            "example": 745238.91
          },
          "coordinatesLatLon": {
            "$ref": "#/components/schemas/Coordinates"
          },
          "identification": {
            "type": "string",
            "example": "22/15a"
          }
        }
      },
      "Coordinates": {
        "required": [
          "x",
          "y"
        ],
        "properties": {
          "x": {
            "type": "number",
            "format": "double",
            "example": 50.1124277
          },
          "y": {
            "type": "number",
            "format": "double",
            "example": 14.381625
          }
        }
      },
      "Sort": {
        "type": "object",
        "properties": {
          "sorted": {
            "type": "boolean",
            "example": false
          },
          "unsorted": {
            "type": "boolean",
            "example": true
          },
          "empty": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "FacetQueryResult": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": []
          },
          "pageable": {
            "type": "string",
            "example": "INSTANCE"
          },
          "totalElements": {
            "type": "integer",
            "example": 0
          },
          "totalPages": {
            "type": "integer",
            "example": 1
          },
          "last": {
            "type": "boolean",
            "example": true
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "numberOfElements": {
            "type": "integer",
            "example": 0
          },
          "first": {
            "type": "boolean",
            "example": true
          },
          "size": {
            "type": "integer",
            "example": 0
          },
          "number": {
            "type": "integer",
            "example": 0
          },
          "empty": {
            "type": "boolean",
            "example": true
          }
        }
      }
    }
  }
}