{
  "openapi": "3.0.1",
  "info": {
    "title": "hetras Hotel Rooms API",
    "description": "Get hotel rooms",
    "version": "v0",
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_hetras_profile_image.jpeg"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "https://developer.hetras.com/swagger/spec/HotelAPIv0.json",
        "version": "2.0"
      }
    ],
    "x-providerName": "hetras-certification.net",
    "x-serviceName": "hotel"
  },
  "servers": [
    {
      "url": "https://api.hetras-certification.net/"
    }
  ],
  "paths": {
    "/api/hotel/v0/hotels/{hotelId}/rooms": {
      "get": {
        "tags": [
          "Rooms"
        ],
        "summary": "Get a list of rooms using the provided filtering and pagination criteria.",
        "description": "Find all rooms for the hotel that match the specified filter criteria. The filtering will be done based on the current state of\r\n            the rooms.",
        "operationId": "Rooms_GetRooms",
        "parameters": [
          {
            "name": "App-Id",
            "in": "header",
            "description": "Application identifier",
            "required": true,
            "schema": {
              "type": "string",
              "x-data-threescale-name": "app_ids"
            },
            "x-data-threescale-name": "app_ids"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "Application key.",
            "required": true,
            "schema": {
              "type": "string",
              "x-data-threescale-name": "app_keys"
            },
            "x-data-threescale-name": "app_keys"
          },
          {
            "name": "hotelId",
            "in": "path",
            "description": "The hotel you are trying to find rooms for.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "occupancy",
            "in": "query",
            "description": "Return results only for rooms that have the given frontdesk ocuppancy status.",
            "schema": {
              "type": "string",
              "enum": [
                "Occupied",
                "Vacant"
              ]
            }
          },
          {
            "name": "conditions",
            "in": "query",
            "description": "Return results only for rooms that have the given room condition status.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "CleanNotInspected",
                  "Clean",
                  "Dirty"
                ]
              }
            }
          },
          {
            "name": "maintenances",
            "in": "query",
            "description": "Return results only for rooms that have the given maintenance status.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "NotSet",
                  "None",
                  "OutOfInventory",
                  "OutOfOrder",
                  "OutOfService"
                ]
              }
            }
          },
          {
            "name": "roomTypes",
            "in": "query",
            "description": "Return result only for rooms for the given room types. Allows to pass a comma-separated list of room types.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "amenities",
            "in": "query",
            "description": "Return result only for rooms having all of the given amenities. You can provide a comma seperated list of \r\n            amenity codes.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "views",
            "in": "query",
            "description": "Return result only for rooms having at least one of the specified views. You can provide a comma seperated list of \r\n            view codes.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "locations",
            "in": "query",
            "description": "Return result only for rooms having at least one of the specified locations. You can provide a comma seperated list of \r\n            location codes.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Amount of items to skip.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "top",
            "in": "query",
            "description": "Amount of items to select.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "inlinecount",
            "in": "query",
            "description": "Return total number of items for a given filter criteria.",
            "schema": {
              "type": "string",
              "enum": [
                "None",
                "AllPages"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of rooms for the hotel based on the set filter criteria.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomListResponse"
                }
              }
            }
          },
          "204": {
            "description": "There are no rooms found for the given filtering and pagination criteria.",
            "content": {}
          },
          "401": {
            "description": "You provided wrong credentials, or you reached your API limit.",
            "content": {}
          },
          "403": {
            "description": "The application does not have access to the requested resource.",
            "content": {}
          },
          "404": {
            "description": "Not Found. The server has not found anything matching the Request-URI or the requested room could not be found.",
            "content": {}
          },
          "422": {
            "description": "The request failed to validate.",
            "content": {}
          },
          "500": {
            "description": "We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles.",
            "content": {}
          },
          "503": {
            "description": "The server is currently unavailable. Please try later.",
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/hotel/v0/hotels/{hotelId}/rooms/$count": {
      "get": {
        "tags": [
          "Rooms"
        ],
        "summary": "Get the count of all rooms in the hotel matching the given filter criteria.",
        "operationId": "Rooms_GetRoomsCount",
        "parameters": [
          {
            "name": "App-Id",
            "in": "header",
            "description": "Application identifier",
            "required": true,
            "schema": {
              "type": "string",
              "x-data-threescale-name": "app_ids"
            },
            "x-data-threescale-name": "app_ids"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "Application key.",
            "required": true,
            "schema": {
              "type": "string",
              "x-data-threescale-name": "app_keys"
            },
            "x-data-threescale-name": "app_keys"
          },
          {
            "name": "hotelId",
            "in": "path",
            "description": "The hotel you are counting the rooms for.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "occupancy",
            "in": "query",
            "description": "Return results only for rooms that have the given frontdesk ocuppancy status.",
            "schema": {
              "type": "string",
              "enum": [
                "Occupied",
                "Vacant"
              ]
            }
          },
          {
            "name": "conditions",
            "in": "query",
            "description": "Return results only for rooms that have the given room condition status.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "CleanNotInspected",
                  "Clean",
                  "Dirty"
                ]
              }
            }
          },
          {
            "name": "maintenances",
            "in": "query",
            "description": "Return results only for rooms that have the given maintenance status.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "NotSet",
                  "None",
                  "OutOfInventory",
                  "OutOfOrder",
                  "OutOfService"
                ]
              }
            }
          },
          {
            "name": "roomTypes",
            "in": "query",
            "description": "Return result only for rooms for the given room types. Allows to pass a comma-separated list of room types.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "amenities",
            "in": "query",
            "description": "Return result only for rooms having all of the given amenities. You can provide a comma seperated list of \r\n            amenity codes.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "views",
            "in": "query",
            "description": "Return result only for rooms having at least one of the specified views. You can provide a comma seperated list of \r\n            view codes.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "locations",
            "in": "query",
            "description": "Return result only for rooms having at least one of the specified locations. You can provide a comma seperated list of \r\n            location codes.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The room count in the hotel matching the given filter criteria.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TotalCountResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TotalCountResponse"
                }
              }
            }
          },
          "401": {
            "description": "You provided wrong credentials, or you reached your API limit.",
            "content": {}
          },
          "403": {
            "description": "The application does not have access to the requested resource.",
            "content": {}
          },
          "404": {
            "description": "Not Found. The server has not found anything matching the Request-URI or the requested room could not be found.",
            "content": {}
          },
          "422": {
            "description": "The request failed to validate.",
            "content": {}
          },
          "500": {
            "description": "We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles.",
            "content": {}
          },
          "503": {
            "description": "The server is currently unavailable. Please try later.",
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/hotel/v0/hotels/{hotelId}/rooms/available": {
      "get": {
        "tags": [
          "Rooms"
        ],
        "summary": "Request available rooms using a given criteria.",
        "operationId": "Rooms_GetAvailableRooms",
        "parameters": [
          {
            "name": "App-Id",
            "in": "header",
            "description": "Application identifier",
            "required": true,
            "schema": {
              "type": "string",
              "x-data-threescale-name": "app_ids"
            },
            "x-data-threescale-name": "app_ids"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "Application key.",
            "required": true,
            "schema": {
              "type": "string",
              "x-data-threescale-name": "app_keys"
            },
            "x-data-threescale-name": "app_keys"
          },
          {
            "name": "hotelId",
            "in": "path",
            "description": "The hotel you are looking for available rooms.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Rooms returned will not be assigned to a reservation or be under maintenance between this date\r\n            and the specified to date. Still there could be departing reservations or ending maintenances\r\n            for this date.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Rooms returned will not be assigned to a reservation or be under maintenance between the specified\r\n            from date and this date. Still there could be arriving reservations or beginning maintenances\r\n            for this date.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "adults",
            "in": "query",
            "description": "Specifies number of adults the returned rooms will have to be able to house. The default value is 1.",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "includeOutOfService",
            "in": "query",
            "description": "Should rooms that are set OutOfService in the defined time period be returned as available. By default\r\n            they are not.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "roomTypes",
            "in": "query",
            "description": "Return result only for rooms for the given room types. Allows to pass a comma-separated list of room types.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "amenities",
            "in": "query",
            "description": "Return result only for rooms having all of the given amenities. You can provide a comma seperated list of \r\n            amenity codes.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "views",
            "in": "query",
            "description": "Return result only for rooms having at least one of the specified views. You can provide a comma seperated list of \r\n            view codes.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "locations",
            "in": "query",
            "description": "Return result only for rooms having at least one of the specified locations. You can provide a comma seperated list of \r\n            location codes.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Amount of items to skip.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "top",
            "in": "query",
            "description": "Amount of items to select.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "inlinecount",
            "in": "query",
            "description": "Return total number of items for a given filter criteria.",
            "schema": {
              "type": "string",
              "enum": [
                "None",
                "AllPages"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of available rooms in the specified time period.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomListResponse"
                }
              }
            }
          },
          "204": {
            "description": "There are no available rooms found for the given criteria.",
            "content": {}
          },
          "401": {
            "description": "You provided wrong credentials, or you reached your API limit.",
            "content": {}
          },
          "403": {
            "description": "The application does not have access to the requested resource.",
            "content": {}
          },
          "404": {
            "description": "Not Found. The server has not found anything matching the Request-URI or the requested room could not be found.",
            "content": {}
          },
          "422": {
            "description": "The request failed to validate.",
            "content": {}
          },
          "500": {
            "description": "We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles.",
            "content": {}
          },
          "503": {
            "description": "The server is currently unavailable. Please try later.",
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/hotel/v0/hotels/{hotelId}/rooms/{roomNumber}": {
      "get": {
        "tags": [
          "Rooms"
        ],
        "summary": "Get all the details for a specific room in the hotel.",
        "description": "With this call you can load the details about a specific room in the hotel. It will show you the current status of the room.",
        "operationId": "Rooms_GetRoom",
        "parameters": [
          {
            "name": "App-Id",
            "in": "header",
            "description": "Application identifier",
            "required": true,
            "schema": {
              "type": "string",
              "x-data-threescale-name": "app_ids"
            },
            "x-data-threescale-name": "app_ids"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "Application key.",
            "required": true,
            "schema": {
              "type": "string",
              "x-data-threescale-name": "app_keys"
            },
            "x-data-threescale-name": "app_keys"
          },
          {
            "name": "hotelId",
            "in": "path",
            "description": "The hotel id the room belongs to.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roomNumber",
            "in": "path",
            "description": "The room number you want to see details for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room details for the given room and hotel.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            }
          },
          "401": {
            "description": "You provided wrong credentials, or you reached your API limit.",
            "content": {}
          },
          "403": {
            "description": "The application does not have access to the requested resource.",
            "content": {}
          },
          "404": {
            "description": "Not Found. The server has not found anything matching the Request-URI or the requested room could not be found.",
            "content": {}
          },
          "500": {
            "description": "We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles.",
            "content": {}
          },
          "503": {
            "description": "The server is currently unavailable. Please try later.",
            "content": {}
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Rooms"
        ],
        "summary": "Partially updates a room.",
        "description": "The hetras API is using this <a href=\"https://developer.hetras.com/docs/patch\" onfocus=\"this.blur()\" target=\"_blank\">Patch Specification</a>\r\n            to partially update an existing resource. Currently this call only allows to modify condition and housekeeping occupancy status of the room.\r\n            <br /><br />\r\n            A request example:<br /><pre>\r\n            [\r\n              {\r\n                \"op\": \"replace\", \"path\": \"/status/condition\", \"value\": \"CleanNotInspected\"\r\n              }, {\r\n                \"op\": \"replace\", \"path\": \"/status/housekeeping_occupancy\", \"value\": \"Vacant\"\r\n              }\r\n            ]\r\n            </pre><br />\r\n            For more details on how the API responds to errors please check our documentation on \r\n            <a href=\"https://developer.hetras.com/docs/errors/\" onfocus=\"this.blur()\">Error Handling</a>.<br />",
        "operationId": "Rooms_PatchRoom",
        "parameters": [
          {
            "name": "App-Id",
            "in": "header",
            "description": "Application identifier",
            "required": true,
            "schema": {
              "type": "string",
              "x-data-threescale-name": "app_ids"
            },
            "x-data-threescale-name": "app_ids"
          },
          {
            "name": "App-Key",
            "in": "header",
            "description": "Application key.",
            "required": true,
            "schema": {
              "type": "string",
              "x-data-threescale-name": "app_keys"
            },
            "x-data-threescale-name": "app_keys"
          },
          {
            "name": "hotelId",
            "in": "path",
            "description": "The hotel id the room belongs to.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roomNumber",
            "in": "path",
            "description": "The room number of the room you would like to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A set of JSON Patch operations.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatchDocument[RoomPatchRequest]"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatchDocument[RoomPatchRequest]"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The update was successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Request body erroneous.",
            "content": {}
          },
          "401": {
            "description": "You provided wrong credentials, or you reached your API limit.",
            "content": {}
          },
          "403": {
            "description": "The application does not have access to the requested resource.",
            "content": {}
          },
          "404": {
            "description": "Not Found. The server has not found anything matching the Request-URI.",
            "content": {}
          },
          "422": {
            "description": "The request failed to validate.",
            "content": {}
          },
          "500": {
            "description": "We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles.",
            "content": {}
          },
          "503": {
            "description": "The server is currently unavailable. Please try later.",
            "content": {}
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "patchRequest"
      }
    }
  },
  "components": {
    "schemas": {
      "AccessControlInfo": {
        "type": "object",
        "properties": {
          "channel_codes": {
            "type": "array",
            "description": "List of codes of distribution channels",
            "items": {
              "type": "string"
            }
          },
          "channel_group": {
            "type": "string",
            "description": "Code of the distribution channel group"
          }
        }
      },
      "CodeBaseEntry": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LinkObject"
            },
            "description": "Collection of links to related resources"
          },
          "code": {
            "type": "string",
            "description": "The code value. This value you will see in reservations as market code and in other\r\n            resources like the revenue buckets in transactions"
          },
          "default": {
            "type": "boolean",
            "description": "This attribute tells you if this code is the default code for the specific type or not.\r\n            Not all the types of codes need to have a default code"
          },
          "id": {
            "type": "string",
            "description": "The id of the code"
          },
          "name": {
            "type": "string",
            "description": "The name of the code that usually is more human readable"
          },
          "type": {
            "type": "string",
            "description": "The type or category of the code",
            "enum": [
              "GuestRequest",
              "RequestDietary",
              "VIPStatus",
              "ReasonForRateChange",
              "Regrets",
              "MarketSegments",
              "SourceOfBusiness",
              "LoyaltyProgram",
              "CancellationReason",
              "AccountType",
              "AccountRank",
              "VIPLevel",
              "Title",
              "ContactFunction",
              "Territory",
              "CorrespondenceType",
              "ExternalProgramType",
              "RevenueBucket",
              "AdditionalRevenueBucket",
              "AdditionalStatisticsBuckets",
              "MealPeriod",
              "BillingCycle",
              "ReminderCycle",
              "MajorMarketSegments",
              "DocumentType",
              "ActivityType",
              "ReservationLabels"
            ]
          }
        }
      },
      "CodeFullEntry": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LinkObject"
            },
            "description": "Collection of links to related resources"
          },
          "code": {
            "type": "string",
            "description": "The code value. This value you will see in reservations as market code and in other\r\n            resources like the revenue buckets in transactions"
          },
          "comment": {
            "type": "string",
            "description": "The comment for this code"
          },
          "default": {
            "type": "boolean",
            "description": "This attribute tells you if this code is the default code for the specific type or not.\r\n            Not all the types of codes need to have a default code"
          },
          "id": {
            "type": "string",
            "description": "The id of the code"
          },
          "name": {
            "type": "string",
            "description": "The name of the code that usually is more human readable"
          },
          "parent": {
            "$ref": "#/components/schemas/CodeBaseEntry"
          },
          "type": {
            "type": "string",
            "description": "The type or category of the code",
            "enum": [
              "GuestRequest",
              "RequestDietary",
              "VIPStatus",
              "ReasonForRateChange",
              "Regrets",
              "MarketSegments",
              "SourceOfBusiness",
              "LoyaltyProgram",
              "CancellationReason",
              "AccountType",
              "AccountRank",
              "VIPLevel",
              "Title",
              "ContactFunction",
              "Territory",
              "CorrespondenceType",
              "ExternalProgramType",
              "RevenueBucket",
              "AdditionalRevenueBucket",
              "AdditionalStatisticsBuckets",
              "MealPeriod",
              "BillingCycle",
              "ReminderCycle",
              "MajorMarketSegments",
              "DocumentType",
              "ActivityType",
              "ReservationLabels"
            ]
          }
        }
      },
      "CodesListRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Return all results matching the specified code. A code is unique in combination with the type\r\n            which means when you query for a code you could get multiple results each for a different type"
          },
          "type": {
            "type": "string",
            "description": "Return all codes for the specified type",
            "enum": [
              "GuestRequest",
              "RequestDietary",
              "VIPStatus",
              "ReasonForRateChange",
              "Regrets",
              "MarketSegments",
              "SourceOfBusiness",
              "LoyaltyProgram",
              "CancellationReason",
              "AccountType",
              "AccountRank",
              "VIPLevel",
              "Title",
              "ContactFunction",
              "Territory",
              "CorrespondenceType",
              "ExternalProgramType",
              "RevenueBucket",
              "AdditionalRevenueBucket",
              "AdditionalStatisticsBuckets",
              "MealPeriod",
              "BillingCycle",
              "ReminderCycle",
              "MajorMarketSegments",
              "DocumentType",
              "ActivityType",
              "ReservationLabels"
            ]
          }
        }
      },
      "CodesListResponse": {
        "type": "object",
        "properties": {
          "codes": {
            "type": "array",
            "description": "The list of codes matching the defined filter criteria",
            "items": {
              "$ref": "#/components/schemas/CodeBaseEntry"
            }
          }
        }
      },
      "DatePeriod": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "Start Date for this time period",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "description": "End Date for this time period",
            "format": "date-time"
          }
        }
      },
      "Derivation": {
        "type": "object",
        "properties": {
          "adjustment": {
            "type": "string",
            "description": "Mode for the calculation of the daily rates adjustment",
            "enum": [
              "Amount",
              "Percentage"
            ]
          },
          "base_rateplan": {
            "$ref": "#/components/schemas/RelatedRateplan"
          }
        }
      },
      "EmbeddedReservation": {
        "required": [
          "arrival_date",
          "confirmation_id",
          "departure_date",
          "reservation_number",
          "reservation_status"
        ],
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LinkObject"
            },
            "description": "Collection of links to related resources"
          },
          "arrival_date": {
            "type": "string",
            "description": "The arrival date of the guests",
            "format": "date-time"
          },
          "confirmation_id": {
            "type": "string",
            "description": "he confirmation id for the booking which the guest can use to check in on the kiosk, add the \r\n            booking to the mobile app etc. It is used as identifier for all reservations done with the \r\n            same booking request"
          },
          "departure_date": {
            "type": "string",
            "description": "The departure date of the guests",
            "format": "date-time"
          },
          "reservation_number": {
            "type": "integer",
            "description": "The reservation number of the reservation",
            "format": "int32"
          },
          "reservation_status": {
            "type": "string",
            "description": "The current status of this reservation",
            "enum": [
              "Tentative",
              "Waitlisted",
              "OnRequest",
              "NonGuaranteed",
              "Guaranteed",
              "InHouse",
              "CheckedOut",
              "NoShow",
              "Denied",
              "Cancelled",
              "Released",
              "Walked",
              "Expired",
              "WalkIn",
              "Registered"
            ]
          }
        },
        "description": "Basic data about a reservation"
      },
      "EmbeddedRoomType": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LinkObject"
            },
            "description": "Collection of links to related resources"
          },
          "code": {
            "type": "string",
            "description": "Code of the room type"
          },
          "description": {
            "type": "string",
            "description": "Description of the room type"
          },
          "name": {
            "type": "string",
            "description": "Name of the room type"
          }
        },
        "description": "Basic data for a room type. To get the full details please follow the self link\r\n            from the links collection"
      },
      "EmbeddedRoomTypeSimple": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of the room type"
          },
          "description": {
            "type": "string",
            "description": "Description of the room type"
          },
          "name": {
            "type": "string",
            "description": "Name of the room type"
          }
        },
        "description": "Contains only a basic information about a room type. No cross-links available as well."
      },
      "EmbeddedRoomWithStatus": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LinkObject"
            },
            "description": "Collection of links to related resources"
          },
          "created": {
            "type": "string",
            "description": "Timestamp the room was created",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Description of the room"
          },
          "name": {
            "type": "string",
            "description": "Name of the room"
          },
          "number": {
            "type": "string",
            "description": "Number of the room"
          },
          "room_type": {
            "$ref": "#/components/schemas/EmbeddedRoomType"
          },
          "status": {
            "$ref": "#/components/schemas/RoomStatus"
          },
          "updated": {
            "type": "string",
            "description": "Timestamp of when the room was changed the last time",
            "format": "date-time"
          }
        }
      },
      "ExtendedRateplanEntry": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LinkObject"
            },
            "description": "Collection of links to related resources"
          },
          "access_control": {
            "type": "array",
            "description": "List of distribution channel groups and channels the rateplan is sold through",
            "items": {
              "$ref": "#/components/schemas/AccessControlInfo"
            }
          },
          "active": {
            "type": "boolean",
            "description": "Defines if the rateplan has been ended and is expired"
          },
          "active_periods": {
            "type": "array",
            "description": "List of active periods. Arrival and departure day for reservations based on this rateplan need to\r\n            fit into one of these time periods",
            "items": {
              "$ref": "#/components/schemas/DatePeriod"
            }
          },
          "booking_periods": {
            "type": "array",
            "description": "List of booking periods. During these time periods the rateplan is sold",
            "items": {
              "$ref": "#/components/schemas/DatePeriod"
            }
          },
          "code": {
            "type": "string",
            "description": "Code of the rateplan"
          },
          "commissionable": {
            "type": "boolean",
            "description": "Defines if this rateplan is setup with a commission"
          },
          "created": {
            "type": "string",
            "description": "Timestamp the rateplan was created",
            "format": "date-time"
          },
          "day_use": {
            "type": "boolean",
            "description": "Defines if this rateplan is used for day use reservations"
          },
          "derivation": {
            "$ref": "#/components/schemas/Derivation"
          },
          "derived_rateplans": {
            "type": "array",
            "description": "Details about all the derived rateplans if any",
            "items": {
              "$ref": "#/components/schemas/RelatedRateplan"
            }
          },
          "description": {
            "type": "string",
            "description": "Description of the rateplan"
          },
          "folio_name": {
            "type": "string",
            "description": "Text defining how the room charges for this rateplan are shown on the folio and\r\n            invoice for the guest"
          },
          "group": {
            "$ref": "#/components/schemas/RateplanGroup"
          },
          "included_services": {
            "type": "array",
            "description": "List of codes for the included services sold with this rateplan",
            "items": {
              "type": "string"
            }
          },
          "is_yieldable": {
            "type": "boolean",
            "description": "Gives the information if this rateplan is Yieldable rateplan"
          },
          "market_code": {
            "type": "string",
            "description": "The code of the market segment the rate plan is linked to"
          },
          "name": {
            "type": "string",
            "description": "Name of the rateplan"
          },
          "noshow_policy": {
            "type": "string",
            "description": "The code of the noshow policy for this rateplan"
          },
          "restrictions": {
            "$ref": "#/components/schemas/Restrictions"
          },
          "room_types": {
            "type": "array",
            "description": "List of all room types sold through this rateplan",
            "items": {
              "$ref": "#/components/schemas/EmbeddedRoomType"
            }
          },
          "suspended": {
            "type": "boolean",
            "description": "Defines if a rateplan is suspended and no new reservations can be created for this\r\n            rateplan at the moment"
          },
          "taxes_included": {
            "type": "boolean",
            "description": "Defines if the daily rates include VAT or not"
          },
          "updated": {
            "type": "string",
            "description": "Timestamp of when the rateplan was changed the last time",
            "format": "date-time"
          },
          "visibility": {
            "type": "string",
            "description": "Defines if this rateplan is visible to the public or only for specific customers",
            "enum": [
              "Public",
              "Negotiated"
            ]
          }
        }
      },
      "GetAvailableRoomsRequest": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "adults": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "description": "Specifies number of adults the returned rooms will have to be able to house. The default value is 1.",
            "format": "byte"
          },
          "amenities": {
            "type": "array",
            "description": "Return result only for rooms having all of the given amenities. You can provide a comma seperated list of \r\n            amenity codes.",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "string",
            "description": "Rooms returned will not be assigned to a reservation or be under maintenance between this date\r\n            and the specified to date. Still there could be departing reservations or ending maintenances\r\n            for this date.",
            "format": "date-time"
          },
          "includeOutOfService": {
            "type": "boolean",
            "description": "Should rooms that are set OutOfService in the defined time period be returned as available. By default\r\n            they are not."
          },
          "locations": {
            "type": "array",
            "description": "Return result only for rooms having at least one of the specified locations. You can provide a comma seperated list of \r\n            location codes.",
            "items": {
              "type": "string"
            }
          },
          "roomTypes": {
            "type": "array",
            "description": "Return result only for rooms for the given room types. Allows to pass a comma-separated list of room types.",
            "items": {
              "type": "string"
            }
          },
          "to": {
            "type": "string",
            "description": "Rooms returned will not be assigned to a reservation or be under maintenance between the specified\r\n            from date and this date. Still there could be arriving reservations or beginning maintenances\r\n            for this date.",
            "format": "date-time"
          },
          "views": {
            "type": "array",
            "description": "Return result only for rooms having at least one of the specified views. You can provide a comma seperated list of \r\n            view codes.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetRatesRequest": {
        "required": [
          "From",
          "To"
        ],
        "type": "object",
        "properties": {
          "Expand": {
            "type": "string",
            "description": "You can expand the supplements per room type on demand. By default they are not shown.",
            "enum": [
              "RoomTypeSupplements"
            ]
          },
          "From": {
            "type": "string",
            "description": "Defines the last business day you would like to get rates for. The maximum time span between <i>from</i>´and <i>to</i>\r\n            is limited to 365 days.",
            "format": "date-time"
          },
          "To": {
            "type": "string",
            "description": "Defines the first business day you would like to get rates for.",
            "format": "date-time"
          }
        }
      },
      "GetRoomListRequest": {
        "type": "object",
        "properties": {
          "amenities": {
            "type": "array",
            "description": "Return result only for rooms having all of the given amenities. You can provide a comma seperated list of \r\n            amenity codes.",
            "items": {
              "type": "string"
            }
          },
          "conditions": {
            "type": "array",
            "description": "Return results only for rooms that have the given room condition status.",
            "items": {
              "type": "string",
              "enum": [
                "CleanNotInspected",
                "Clean",
                "Dirty"
              ]
            }
          },
          "locations": {
            "type": "array",
            "description": "Return result only for rooms having at least one of the specified locations. You can provide a comma seperated list of \r\n            location codes.",
            "items": {
              "type": "string"
            }
          },
          "maintenances": {
            "type": "array",
            "description": "Return results only for rooms that have the given maintenance status.",
            "items": {
              "type": "string",
              "enum": [
                "NotSet",
                "None",
                "OutOfInventory",
                "OutOfOrder",
                "OutOfService"
              ]
            }
          },
          "occupancy": {
            "type": "string",
            "description": "Return results only for rooms that have the given frontdesk ocuppancy status.",
            "enum": [
              "Occupied",
              "Vacant"
            ]
          },
          "roomTypes": {
            "type": "array",
            "description": "Return result only for rooms for the given room types. Allows to pass a comma-separated list of room types.",
            "items": {
              "type": "string"
            }
          },
          "views": {
            "type": "array",
            "description": "Return result only for rooms having at least one of the specified views. You can provide a comma seperated list of \r\n            view codes.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Hotel": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "The city the hotel is located in"
          },
          "code": {
            "type": "string",
            "description": "The code of the hotel"
          },
          "country": {
            "type": "string",
            "description": "The country the hotel is located. The country code is in ISO 3166-1 alpha-2 format\r\n            (see: <a href=\"http://www.iso.org/iso/country_codes/iso_3166_code_lists/country_names_and_code_elements.htm\" onfocus=\"this.blur()\" target=\"_blank\">http://www.iso.org/iso/country_codes/iso_3166_code_lists/country_names_and_code_elements.htm</a>)"
          },
          "created": {
            "type": "string",
            "description": "Timestamp the hotel was created",
            "format": "date-time"
          },
          "current_business_day": {
            "type": "string",
            "description": "Return the current business day of the hotel in the ISO-8601 format \"YYYY-MM-DD\"",
            "format": "date-time"
          },
          "desc": {
            "type": "string",
            "description": "The descriptive text for the the hotel"
          },
          "email": {
            "type": "string",
            "description": "The email address of the hotel"
          },
          "fax": {
            "type": "string",
            "description": "The fax number of the hotel"
          },
          "hotel_id": {
            "type": "integer",
            "description": "The id of the hotel",
            "format": "int32"
          },
          "latitude": {
            "type": "number",
            "description": "The latitude for the geolocation of the hotel. This allows you to show the hotel on a map",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "The longitude for the geolocation of the hotel. This allows you to show the hotel on a map",
            "format": "double"
          },
          "name": {
            "type": "string",
            "description": "The name of the hotel"
          },
          "phone": {
            "type": "string",
            "description": "The main phone number to call the hotel"
          },
          "postal_code": {
            "type": "string",
            "description": "The postal code of the hotel"
          },
          "state": {
            "type": "string",
            "description": "The state the hotel is located in"
          },
          "street": {
            "type": "string",
            "description": "The street address of the hotel"
          },
          "updated": {
            "type": "string",
            "description": "Timestamp of when the hotel was changed the last time",
            "format": "date-time"
          },
          "url": {
            "type": "string",
            "description": "The homepage URL of the hotel"
          },
          "utc_offset": {
            "type": "string",
            "description": "The current time offset of the hotel to UTC. This is taking into account daylight saving times and shows the offset for the time the request is handled. The response\r\n            will be in the format of \"UTC±hh:mm\". If there is no offset to UTC it will be shown as \"UTC+00:00\""
          }
        }
      },
      "JsonPatchDocument[RatePatchRequest]": {
        "type": "array",
        "properties": {},
        "items": {
          "$ref": "#/components/schemas/Operation[RatePatchRequest]"
        }
      },
      "JsonPatchDocument[RoomPatchRequest]": {
        "type": "array",
        "properties": {},
        "items": {
          "$ref": "#/components/schemas/Operation[RoomPatchRequest]"
        }
      },
      "LinkObject": {
        "required": [
          "href"
        ],
        "type": "object",
        "properties": {
          "deprecation": {
            "type": "string",
            "description": "<para>The \"deprecation\" property is OPTIONAL.</para>\r\n<para> </para>\r\n<para>Its presence indicates that the link is to be deprecated (i.e.\r\n            removed) at a future date.  Its value is a URL that SHOULD provide\r\n            further information about the deprecation.\r\n            A client SHOULD provide some notification (for example, by logging a\r\n            warning message) whenever it traverses over a link that has this\r\n            property.  The notification SHOULD include the deprecation property's\r\n            value so that a client maintainer can easily find information about\r\n            the deprecation.</para>"
          },
          "href": {
            "type": "string",
            "description": "<para>The \"href\" property is REQUIRED.</para>\r\n<para> </para>\r\n<para>Its value is either a URI [RFC3986] or a URI Template [RFC6570].\r\n            If the value is a URI Template then the Link Object SHOULD have a\r\n            \"templated\" attribute whose value is true.</para>"
          },
          "hreflang": {
            "type": "string",
            "description": "<para>The \"hreflang\" property is OPTIONAL.</para>\r\n<para> </para>\r\n<para>Its value is a string and is intended for indicating the language of\r\n            the target resource (as defined by [RFC5988]).</para>"
          },
          "name": {
            "type": "string",
            "description": "<para>The \"name\" property is OPTIONAL.</para>\r\n<para> </para>\r\n<para>Its value MAY be used as a secondary key for selecting Link Objects\r\n            which share the same relation type.</para>"
          },
          "profile": {
            "type": "string",
            "description": "<para>The \"profile\" property is OPTIONAL.</para>\r\n<para> </para>\r\n<para>Its value is a string which is a URI that hints about the profile.</para>"
          },
          "templated": {
            "type": "boolean",
            "description": "<para>The \"templated\" property is OPTIONAL.</para>\r\n<para> </para>\r\n<para>Its value is boolean and SHOULD be true when the Link Object's \"href\"\r\n            property is a URI Template.\r\n            Its value SHOULD be considered false if it is undefined or any other\r\n            value than true.</para>"
          },
          "title": {
            "type": "string",
            "description": "<para>The \"title\" property is OPTIONAL.</para>\r\n<para> </para>\r\n<para>Its value is a string and is intended for labelling the link with a\r\n            human-readable identifier (as defined by [RFC5988]).</para>"
          },
          "type": {
            "type": "string",
            "description": "<para>The \"type\" property is OPTIONAL.</para>\r\n<para> </para>\r\n<para>Its value is a string used as a hint to indicate the media type\r\n            expected when dereferencing the target resource.</para>"
          }
        },
        "description": "A Link Object represents a hyperlink from the containing resource to a URI."
      },
      "ListRateplanEntry": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LinkObject"
            },
            "description": "Collection of links to related resources"
          },
          "access_control": {
            "type": "array",
            "description": "List of distribution channel groups and channels the rateplan is sold through",
            "items": {
              "$ref": "#/components/schemas/AccessControlInfo"
            }
          },
          "active": {
            "type": "boolean",
            "description": "Defines if the rateplan has been ended and is expired"
          },
          "active_periods": {
            "type": "array",
            "description": "List of active periods. Arrival and departure day for reservations based on this rateplan need to\r\n            fit into one of these time periods",
            "items": {
              "$ref": "#/components/schemas/DatePeriod"
            }
          },
          "base_rateplan": {
            "type": "string",
            "description": "Code of the base rateplan if this rateplan is derived"
          },
          "booking_periods": {
            "type": "array",
            "description": "List of booking periods. During these time periods the rateplan is sold",
            "items": {
              "$ref": "#/components/schemas/DatePeriod"
            }
          },
          "code": {
            "type": "string",
            "description": "Code of the rateplan"
          },
          "commissionable": {
            "type": "boolean",
            "description": "Defines if this rateplan is setup with a commission"
          },
          "created": {
            "type": "string",
            "description": "Timestamp the rateplan was created",
            "format": "date-time"
          },
          "day_use": {
            "type": "boolean",
            "description": "Defines if this rateplan is used for day use reservations"
          },
          "derived_rateplans": {
            "type": "array",
            "description": "List of codes for all derived rateplans if any",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "description": "Description of the rateplan"
          },
          "group": {
            "type": "string",
            "description": "Code of the rateplan group"
          },
          "included_services": {
            "type": "array",
            "description": "List of codes for the included services sold with this rateplan",
            "items": {
              "type": "string"
            }
          },
          "is_yieldable": {
            "type": "boolean",
            "description": "Gives the information if this rateplan is Yieldable rateplan"
          },
          "market_code": {
            "type": "string",
            "description": "The code of the market segment the rate plan is linked to"
          },
          "name": {
            "type": "string",
            "description": "Name of the rateplan"
          },
          "room_types": {
            "type": "array",
            "description": "List of all room types sold through this rateplan",
            "items": {
              "$ref": "#/components/schemas/EmbeddedRoomTypeSimple"
            }
          },
          "suspended": {
            "type": "boolean",
            "description": "Defines if a rateplan is suspended and no new reservations can be created for this\r\n            rateplan at the moment"
          },
          "updated": {
            "type": "string",
            "description": "Timestamp of when the rateplan was changed the last time",
            "format": "date-time"
          },
          "visibility": {
            "type": "string",
            "description": "Defines if this rateplan is visible to the public or only for specific customers",
            "enum": [
              "Public",
              "Negotiated"
            ]
          }
        }
      },
      "Object": {
        "type": "object"
      },
      "Operation[RatePatchRequest]": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string"
          },
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/Object"
          }
        }
      },
      "Operation[RoomPatchRequest]": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string"
          },
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/Object"
          }
        }
      },
      "PagedDataRequest": {
        "type": "object",
        "properties": {
          "inlinecount": {
            "type": "string",
            "description": "Return total number of items for a given filter criteria.",
            "enum": [
              "None",
              "AllPages"
            ]
          },
          "skip": {
            "type": "integer",
            "description": "Amount of items to skip.",
            "format": "int32"
          },
          "top": {
            "type": "integer",
            "description": "Amount of items to select.",
            "format": "int32"
          }
        }
      },
      "Policy": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "The description of the policy"
          },
          "name": {
            "type": "string",
            "description": "The name of the policy"
          }
        }
      },
      "PriceDerivation": {
        "type": "object",
        "properties": {
          "adjustment": {
            "type": "string",
            "description": "Mode for the calculation of the daily rates adjustment",
            "enum": [
              "Amount",
              "Percentage"
            ]
          },
          "value": {
            "type": "number",
            "description": "The value the rate of the base rateplan is adjusted by based on the calculation mode",
            "format": "double"
          }
        }
      },
      "RateResponse": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LinkObject"
            },
            "description": "Collection of links to related resources"
          },
          "base_price": {
            "type": "number",
            "description": "The price for this business day for the default room type and occupancy of one adult. The price is\r\n            only available for base rateplans. Please be aware that it might be the case that the default room\r\n            type is not sold by the rateplan. Nevertheless the supplements will always be added to the price for \r\n            the default room type and one adult",
            "format": "double"
          },
          "business_day": {
            "type": "string",
            "description": "The business day",
            "format": "date-time"
          },
          "cancellation_policy": {
            "$ref": "#/components/schemas/Policy"
          },
          "derivation": {
            "$ref": "#/components/schemas/PriceDerivation"
          },
          "minimum_guarantee_type": {
            "type": "string",
            "description": "The minimum guarantee",
            "enum": [
              "PM4Hold",
              "PM6Hold",
              "GuaranteeToCreditCard",
              "GuaranteeToGuestAccount",
              "GuaranteeByTravelAgent",
              "GuaranteeByCompany",
              "Deposit",
              "Voucher",
              "Prepayment",
              "NonGuaranteed",
              "Tentative",
              "Waitlist"
            ]
          },
          "per_person_surcharge": {
            "type": "number",
            "description": "The surcharge per additional adult staying in the room. It is only available on base rateplans",
            "format": "double"
          },
          "room_type_supplements": {
            "type": "array",
            "description": "List of supplements added to the price per room type",
            "items": {
              "$ref": "#/components/schemas/RoomTypeSupplement"
            }
          }
        }
      },
      "RateplanGroup": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of the rateplan group"
          },
          "name": {
            "type": "string",
            "description": "Name of the rateplan group"
          }
        }
      },
      "RateplansListRequest": {
        "type": "object",
        "properties": {
          "baseRateplan": {
            "type": "string",
            "description": "Return all rateplans having the specified rateplan as base rateplan"
          },
          "channelCode": {
            "type": "string",
            "description": "Return all rateplans sold through the specified channel"
          },
          "channelGroup": {
            "type": "string",
            "description": "Return all rateplans that are sold through at least one channel out of the specified channel group"
          },
          "commissionable": {
            "type": "boolean",
            "description": "Return all rateplans having commisionable status"
          },
          "group": {
            "type": "string",
            "description": "Return all rateplans belonging to the specified rateplan group"
          },
          "includedServices": {
            "type": "array",
            "description": "Return all rateplans having at least one of the specified services included",
            "items": {
              "type": "string"
            }
          },
          "marketCodes": {
            "type": "array",
            "description": "Return all rateplans having one of the specified values as a market code",
            "items": {
              "type": "string"
            }
          },
          "roomTypes": {
            "type": "array",
            "description": "Return all rateplans by which at least one of the specified room types are sold",
            "items": {
              "type": "string"
            }
          },
          "sellingStatus": {
            "type": "string",
            "description": "Specify which rateplans to return. If you do not specify a value you will by default get active\r\n            rateplans.",
            "enum": [
              "Active",
              "Inactive",
              "All"
            ]
          }
        }
      },
      "RateplansListResponse": {
        "type": "object",
        "properties": {
          "_count": {
            "type": "integer",
            "description": "The number of items matching your request in total for all pages.",
            "format": "int32"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LinkObject"
            },
            "description": "Collection of links to related resources"
          },
          "rateplans": {
            "type": "array",
            "description": "List of rateplans",
            "items": {
              "$ref": "#/components/schemas/ListRateplanEntry"
            }
          }
        }
      },
      "RatesBatchUpdateRequestItem": {
        "required": [
          "base_price",
          "from",
          "rateplan",
          "to"
        ],
        "type": "object",
        "properties": {
          "base_price": {
            "type": "number",
            "description": "The price of the rateplan for the default room type and single occupancy.",
            "format": "double"
          },
          "from": {
            "type": "string",
            "description": "Defines the first business day you would like to update rates. The maximum time span between <i>from</i>´and <i>to</i>\r\n            is limited to 365 days.",
            "format": "date-time"
          },
          "rateplan": {
            "type": "string",
            "description": "The rateplan code to be updated. NOTE: this must be a base rateplan and not a derived one."
          },
          "to": {
            "type": "string",
            "description": "Defines the last business day you would like to update rates. This can be same as {Hetras.PublicApi.Models.Hotels.Rateplans.Rates.RatesBatchUpdateRequestItem.To} if the update is for a single date.",
            "format": "date-time"
          }
        },
        "description": "A rateplan update entry, for a given range and a given price."
      },
      "RatesRequest": {
        "required": [
          "From",
          "To"
        ],
        "type": "object",
        "properties": {
          "From": {
            "type": "string",
            "description": "Defines the last business day you would like to get rates for. The maximum time span between <i>from</i>´and <i>to</i>\r\n            is limited to 365 days.",
            "format": "date-time"
          },
          "To": {
            "type": "string",
            "description": "Defines the first business day you would like to get rates for.",
            "format": "date-time"
          }
        }
      },
      "RatesResponse": {
        "type": "object",
        "properties": {
          "_count": {
            "type": "integer",
            "description": "The number of items matching your request in total for all pages.",
            "format": "int32"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LinkObject"
            },
            "description": "Collection of links to related resources"
          },
          "rates": {
            "type": "array",
            "description": "The list of rates, cancellation policy and minimum guarantee per business day.",
            "items": {
              "$ref": "#/components/schemas/RateResponse"
            }
          }
        }
      },
      "RelatedRateplan": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LinkObject"
            },
            "description": "Collection of links to related resources"
          },
          "code": {
            "type": "string",
            "description": "Code of the rateplan"
          },
          "name": {
            "type": "string",
            "description": "Name of the rateplan"
          }
        }
      },
      "Restrictions": {
        "type": "object",
        "properties": {
          "leadtime_to_book": {
            "type": "integer",
            "description": "Days this rateplan needs to be booked in advance. This value is mutual exclusive to the\r\n            <i>max_advance_booking</i> and if no limit is set it is omitted",
            "format": "int32"
          },
          "max_advance_booking": {
            "type": "integer",
            "description": "Days this rateplan can be booked in advance. This value is mutual exclusive to the\r\n            <i>leadtime_to_book</i> and if no limit is set it is omitted",
            "format": "int32"
          }
        }
      },
      "Room": {
        "required": [
          "expected_occupancy",
          "floor",
          "max_persons",
          "min_persons",
          "number",
          "room_type",
          "status"
        ],
        "type": "object",
        "properties": {
          "amenities": {
            "type": "array",
            "description": "List of amenities for the room",
            "items": {
              "$ref": "#/components/schemas/SimpleAttribute"
            }
          },
          "beddings": {
            "type": "array",
            "description": "Provides information about available beds in the room",
            "items": {
              "$ref": "#/components/schemas/RoomBedding"
            }
          },
          "created": {
            "type": "string",
            "description": "Timestamp the room was created",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Description of the room"
          },
          "expected_occupancy": {
            "type": "integer",
            "description": "The common amount of persons for the room",
            "format": "int32"
          },
          "extra_bed_allowed": {
            "type": "boolean",
            "description": "Is there an extra bed allowed in the room"
          },
          "floor": {
            "type": "integer",
            "description": "Floor of the room",
            "format": "int32"
          },
          "locations": {
            "type": "array",
            "description": "List of locations for the room",
            "items": {
              "$ref": "#/components/schemas/SimpleAttribute"
            }
          },
          "max_persons": {
            "type": "integer",
            "description": "Maximum number of allowed persons in the room",
            "format": "int32"
          },
          "min_persons": {
            "type": "integer",
            "description": "Minimum number of allowed persons in the room",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the room"
          },
          "number": {
            "type": "string",
            "description": "Number of the room"
          },
          "reservations": {
            "type": "array",
            "description": "Current reservation(s) for the room. It shows reservations due to arrive today and the one still inhouse.\r\n            If there is a day-use reservation assigned for today it can show you up to 3 reservations. One that will\r\n            depart today, the day-use reservqation for today and the one due to arrive",
            "items": {
              "$ref": "#/components/schemas/EmbeddedReservation"
            }
          },
          "room_type": {
            "$ref": "#/components/schemas/EmbeddedRoomType"
          },
          "status": {
            "$ref": "#/components/schemas/RoomStatus"
          },
          "updated": {
            "type": "string",
            "description": "Timestamp of when the room was changed the last time",
            "format": "date-time"
          },
          "views": {
            "type": "array",
            "description": "List of views for the room",
            "items": {
              "$ref": "#/components/schemas/SimpleAttribute"
            }
          }
        },
        "description": "Represents a room for a property."
      },
      "RoomBedding": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Number of available beds of the specified type",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "description": "The type of bed",
            "enum": [
              "NotDefined",
              "Double",
              "Futon",
              "King",
              "MurphyBed",
              "Queen",
              "SofaBed",
              "TatamiMats",
              "Twin",
              "Single"
            ]
          }
        },
        "description": "Information about room bedding"
      },
      "RoomListResponse": {
        "type": "object",
        "properties": {
          "_count": {
            "type": "integer",
            "description": "The number of items matching your request in total for all pages.",
            "format": "int32"
          },
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LinkObject"
            },
            "description": "Collection of links to related resources"
          },
          "rooms": {
            "type": "array",
            "description": "List of rooms",
            "items": {
              "$ref": "#/components/schemas/EmbeddedRoomWithStatus"
            }
          }
        }
      },
      "RoomMaintenance": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "Start date of the current maintenance work"
          },
          "reason": {
            "type": "string",
            "description": "A description about the reason for the ongoing maintenance work"
          },
          "to": {
            "type": "string",
            "description": "End date of the current maintenance work"
          },
          "value": {
            "type": "string",
            "description": "Maintenance Status",
            "enum": [
              "NotSet",
              "None",
              "OutOfInventory",
              "OutOfOrder",
              "OutOfService"
            ]
          }
        }
      },
      "RoomStatus": {
        "type": "object",
        "properties": {
          "condition": {
            "type": "string",
            "description": "Room Condition status",
            "enum": [
              "CleanNotInspected",
              "Clean",
              "Dirty"
            ]
          },
          "frontdesk_occupancy": {
            "type": "string",
            "description": "The frontdesk occupancy is set by reservation checkin and checkout. It can differ from the\r\n            housekeeping occupancy",
            "enum": [
              "Occupied",
              "Vacant"
            ]
          },
          "housekeeping_occupancy": {
            "type": "string",
            "description": "The housekeeping occupancy status is defined by the housekeeping staff. Usually it matches the\r\n            frontdesk occupancy, but sometimes the reservation is still inhouse, but it looks like there is no\r\n            guest in the room anymore. Then the statuses can differ.",
            "enum": [
              "Occupied",
              "Vacant"
            ]
          },
          "maintenance": {
            "$ref": "#/components/schemas/RoomMaintenance"
          }
        },
        "description": "Represents current room status data."
      },
      "RoomType": {
        "type": "object",
        "properties": {
          "amenities": {
            "type": "array",
            "description": "List of amenities for the room type",
            "items": {
              "$ref": "#/components/schemas/SimpleAttribute"
            }
          },
          "bedding_type": {
            "type": "string",
            "description": "The type of bed for the room type",
            "enum": [
              "NotDefined",
              "Double",
              "Futon",
              "King",
              "MurphyBed",
              "Queen",
              "SofaBed",
              "TatamiMats",
              "Twin",
              "Single"
            ]
          },
          "code": {
            "type": "string",
            "description": "Code of the room type"
          },
          "created": {
            "type": "string",
            "description": "Timestamp the room type was created",
            "format": "date-time"
          },
          "default": {
            "type": "boolean",
            "description": "Specifies if the room type is the default room type of the hotel"
          },
          "description": {
            "type": "string",
            "description": "Description of the room type"
          },
          "expected_occupancy": {
            "type": "integer",
            "description": "The common amount of persons for the room",
            "format": "int32"
          },
          "facilities": {
            "type": "array",
            "description": "List of facilities for the room type",
            "items": {
              "$ref": "#/components/schemas/SimpleAttribute"
            }
          },
          "max_persons": {
            "type": "integer",
            "description": "Maximum number of allowed persons for that room type",
            "format": "int32"
          },
          "min_persons": {
            "type": "integer",
            "description": "Minimum number of allowed persons for that room type",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the room type"
          },
          "updated": {
            "type": "string",
            "description": "Timestamp of when the room type was changed the last time",
            "format": "date-time"
          },
          "views": {
            "type": "array",
            "description": "List of views for the room type",
            "items": {
              "$ref": "#/components/schemas/SimpleAttribute"
            }
          }
        },
        "description": "Represent a room type for a property"
      },
      "RoomTypeSupplement": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LinkObject"
            },
            "description": "Collection of links to related resources"
          },
          "code": {
            "type": "string",
            "description": "The code of the room type"
          },
          "default": {
            "type": "boolean",
            "description": "Specifies if the room type is the default room type of the hotel"
          },
          "supplements": {
            "type": "array",
            "description": "The supplements per adults in the room. The per person surcharge will be added on top",
            "items": {
              "$ref": "#/components/schemas/Supplement"
            }
          }
        }
      },
      "SimpleAttribute": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The code of the attribute"
          },
          "name": {
            "type": "string",
            "description": "The name of the attribute"
          }
        },
        "description": "Represents a simple attribute"
      },
      "Supplement": {
        "type": "object",
        "properties": {
          "adjustment": {
            "type": "string",
            "description": "Mode for the calculation of the supplement value",
            "enum": [
              "Amount",
              "Percentage"
            ]
          },
          "adults": {
            "type": "integer",
            "description": "The number of adults per room",
            "format": "int32"
          },
          "supplement": {
            "type": "number",
            "description": "The amount or percentage that will be added for this room type and number of adults per room",
            "format": "double"
          }
        }
      },
      "TotalCountResponse": {
        "required": [
          "_count"
        ],
        "type": "object",
        "properties": {
          "_count": {
            "type": "integer",
            "description": "Returns the total count for all items matching the query parameters. If none is matching it will return 0.",
            "format": "int64"
          }
        }
      },
      "YieldableRateTimeSlice": {
        "required": [
          "number_of_persons",
          "rate_value",
          "room_type"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "number_of_persons": {
            "type": "integer",
            "description": "Number of persons for which the rate price is saved",
            "format": "int32"
          },
          "rate_value": {
            "type": "number",
            "description": "Rate value amount, which should be unique for the combination of rateplan, date, room type and numer of persons",
            "format": "double"
          },
          "room_type": {
            "type": "string",
            "description": "Room Type code for which the rate price is saved"
          }
        }
      }
    }
  }
}