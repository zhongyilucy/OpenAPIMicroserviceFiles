{
  "openapi": "3.0.1",
  "info": {
    "title": "Hotel Booking",
    "description": "\nBefore using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token. \n\nPlease also be aware that our test environment is based on a subset of the production for this API it may change dynamically. For your tests, use big cities like LON (London) or NYC (New-York).\n\n\n**Warning: Do not perform test booking in production**. All requests are sent and processed by hotel providers. An excessive amount of fake/canceled reservation will make you blacklisted by hotel providers.\n",
    "version": "1.1.2",
    "x-origin": [
      {
        "format": "swagger",
        "url": "https://raw.githubusercontent.com/amadeus4dev/amadeus-open-api-specification/main/spec/json/HotelBooking_v1_swagger_specification.json",
        "version": "2.0"
      }
    ],
    "x-providerName": "amadeus.com",
    "x-serviceName": "amadeus-hotel-booking",
    "x-status": "validated",
    "x-tags": [
      "#mobile-services"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_apis.guru_assets_images_no-logo.svg"
    }
  },
  "servers": [
    {
      "url": "https://test.api.amadeus.com/v1"
    }
  ],
  "tags": [
    {
      "name": "Booking"
    }
  ],
  "paths": {
    "/booking/hotel-bookings": {
      "post": {
        "tags": [
          "Booking"
        ],
        "summary": "Create Orders associated to the Hotel Offers",
        "operationId": "createBooking",
        "parameters": [
          {
            "name": "Ama-Client-Ref",
            "in": "header",
            "description": "Client Reference to track Request/Response",
            "schema": {
              "pattern": "^[A-Z0-9_]*$",
              "type": "string"
            }
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "description": "Compress the Response",
            "schema": {
              "type": "string",
              "enum": [
                "gzip",
                "identity"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "`offerId`, `guests`, `payments` and optional `rooms` for the repartition (when used the `rooms` array items must match the shopping offer `roomQuantity`)\n",
          "content": {
            "application/vnd.amadeus+json": {
              "schema": {
                "title": "BookingSchema",
                "required": [
                  "data"
                ],
                "type": "object",
                "properties": {
                  "data": {
                    "title": "HotelBookingQuery",
                    "required": [
                      "guests",
                      "offerId"
                    ],
                    "type": "object",
                    "properties": {
                      "guests": {
                        "maxItems": 99,
                        "minItems": 1,
                        "uniqueItems": true,
                        "type": "array",
                        "description": "minimum one guest is mandatory",
                        "items": {
                          "$ref": "#/components/schemas/Stakeholder"
                        }
                      },
                      "offerId": {
                        "maxLength": 100,
                        "minLength": 2,
                        "pattern": "^[A-Z0-9]*$",
                        "type": "string",
                        "description": "offerId to book",
                        "example": "63A93695B58821ABB0EC2B33FE9FAB24D72BF34B1BD7D707293763D8D9378FC3"
                      },
                      "payments": {
                        "maxItems": 9,
                        "minItems": 1,
                        "uniqueItems": true,
                        "type": "array",
                        "description": "payments (often mandatory)",
                        "items": {
                          "$ref": "#/components/schemas/Payment"
                        }
                      },
                      "rooms": {
                        "maxItems": 9,
                        "minItems": 1,
                        "type": "array",
                        "description": "rooms repartition (when used the `rooms` array items must match the shopping offer `roomQuantity`)",
                        "items": {
                          "title": "Room",
                          "type": "object",
                          "properties": {
                            "guestIds": {
                              "uniqueItems": true,
                              "type": "array",
                              "description": "room main guest (and accompagnants) (optional)",
                              "items": {
                                "type": "integer",
                                "example": 1
                              }
                            },
                            "paymentId": {
                              "type": "integer",
                              "description": "if missing, the first payment is used (optional)",
                              "example": 1
                            },
                            "specialRequest": {
                              "maxLength": 120,
                              "minLength": 2,
                              "type": "string",
                              "description": "special request to send to the reception (optional)",
                              "example": "I will arrive at midnight"
                            }
                          },
                          "description": "room"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "guests": [
                      {
                        "contact": {
                          "email": "bob.smith@email.com",
                          "phone": 33679278416
                        },
                        "name": {
                          "firstName": "BOB",
                          "lastName": "SMITH",
                          "title": "MR"
                        }
                      }
                    ],
                    "offerId": "NRPQNQBOJM",
                    "payments": [
                      {
                        "card": {
                          "cardNumber": "4111111111111111",
                          "expiryDate": "2026-01",
                          "vendorCode": "VI"
                        },
                        "method": "creditCard"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Booked",
            "content": {
              "application/vnd.amadeus+json": {
                "schema": {
                  "title": "HotelBookedResponse",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "All room bookings data",
                      "items": {
                        "$ref": "#/components/schemas/HotelBookingLight"
                      }
                    },
                    "warnings": {
                      "type": "array",
                      "description": "All Warnings",
                      "items": {
                        "$ref": "#/components/schemas/Warning"
                      }
                    }
                  },
                  "example": {
                    "data": [
                      {
                        "associatedRecords": [
                          {
                            "originSystemCode": "GDS",
                            "reference": "QVH2BX"
                          }
                        ],
                        "id": "XD_8138319951754",
                        "providerConfirmationId": "8138319951754",
                        "type": "hotel-booking"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\ncode    | title                                                          | owner    | pointer\n------- | -------------------------------------------------------------- | -------- | -------\n  477   | INVALID FORMAT                                                 | Amadeus  | \n 4725   | INVALID PASSENGER ASSOCIATION                                  | Amadeus  | data/rooms/guestIds\n33555   | NUMBER OF ROOMS MISMATCH BETWEEN SHOPPING AND BOOKING          | Amadeus  | data/rooms\n33554   | PRICE HAS CHANGED. PLEASE GET A NEW OFFERID AND TRY AGAIN      | Amadeus  | data/offerId\n36803   | OFFERID HAS EXPIRED. PLEASE GET A NEW OFFERID AND TRY AGAIN    | Amadeus  | data/offerId\n 1205   | INVALID CREDIT CARD TYPE                                       | Amadeus  | data/payments/card/vendorCode\n 8517   | INVALID CREDIT CARD NUMBER                                     | Provider | data/payments/card/cardNumber\n 1427   | GUARANTEE REQUIRED                                             | Provider | data/payments/card\n 1146   | DEPOSIT REQUIRED                                               | Provider | data/payments/card\n 3659   | CREDIT CARD DEPOSIT REQUIRED                                   | Provider | data/payments/card\n 3682   | CREDIT CARD NOT ACCEPTED AT HOTEL PROPERTY                     | Provider | data/payments/card/vendorCode\n 3871   | CREDIT CARD EXPIRATION DATE INVALID FOR CHECK IN DATE          | Provider | data/payments/card/expiryDate\n \n",
            "content": {
              "application/vnd.amadeus+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error\n\ncode    | title                                                          | owner                                \n------- | -------------------------------------------------------------- | -------\n00011   | UNABLE TO PROCESS                                              | Provider\n04070   | UNABLE TO PROCESS - CONTACT HELP DESK                          | Amadeus\n",
            "content": {
              "application/vnd.amadeus+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "requestBody"
      }
    }
  },
  "components": {
    "schemas": {
      "AssociatedRecord": {
        "required": [
          "originSystemCode",
          "reference"
        ],
        "type": "object",
        "properties": {
          "originSystemCode": {
            "type": "string",
            "description": "* GDS: Associated Amadeus GDS Flight Booking PNR Record",
            "example": "GDS",
            "enum": [
              "GDS"
            ]
          },
          "reference": {
            "maxLength": 6,
            "minLength": 6,
            "pattern": "^[A-Z0-9]{6}$",
            "type": "string",
            "description": "Amadeus GDS Record",
            "example": "QVH2BX"
          }
        },
        "description": "Associated Record (Flight Booking Record)"
      },
      "Contact": {
        "required": [
          "email",
          "phone"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 90,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\\\.[a-zA-Z0-9-.]+$",
            "type": "string",
            "description": "Email Address",
            "format": "email",
            "example": "bob.smith@email.com"
          },
          "phone": {
            "maxLength": 20,
            "minLength": 6,
            "pattern": "^[+][1-9][0-9]{4,18}$",
            "type": "string",
            "description": "Phone Number in standard E.123(https://en.wikipedia.org/wiki/E.123)",
            "example": 33679278416
          }
        },
        "description": "Contact Details"
      },
      "Error": {
        "required": [
          "code",
          "status",
          "title"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "[Integer] A machine-readable error code from the Amadeus Canned Messages table, that will enable the API Consumers code to handle this type of error",
            "example": 1
          },
          "detail": {
            "type": "string",
            "description": "[String] An easy-to-read explanation specific to this occurrence of the problem. It should give the API consumer an idea of what went wrong and how to recover from it. Like the title, this field value can be localized.",
            "example": "The targeted resource doesn't exist"
          },
          "status": {
            "type": "integer",
            "description": "[Integer] The [HTTP status code](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml) of this response. This is present only in terminal errors which cause an unsuccessful response. In the case of multiple errors, they must all have the same status.",
            "example": 400
          },
          "title": {
            "type": "string",
            "description": "[String] An error title from the Canned Messages table with a 1:1 correspondence to the error code. This may be localized",
            "example": "Resource not found"
          }
        },
        "description": "Error"
      },
      "ErrorResponse": {
        "title": "ErrorResponse",
        "required": [
          "errors"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "HotelBookingLight": {
        "required": [
          "id",
          "providerConfirmationId",
          "type"
        ],
        "type": "object",
        "properties": {
          "associatedRecords": {
            "maxItems": 1,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssociatedRecord"
            }
          },
          "id": {
            "maxLength": 19,
            "minLength": 5,
            "pattern": "^[A-Z0-9_]*$",
            "type": "string",
            "description": "Booking Id",
            "example": "XD_8138319951754"
          },
          "providerConfirmationId": {
            "maxLength": 16,
            "minLength": 2,
            "pattern": "^[A-Z0-9_]*$",
            "type": "string",
            "description": "GDS Confirmation Number. If you call the Provider, this Reference may be asked",
            "example": "8138319951754"
          },
          "self": {
            "type": "string",
            "description": "Retrieve Booking Details",
            "format": "uri",
            "example": "https://test.api.amadeus.com/v1/booking/hotel-bookings/XD_8138319951754"
          },
          "type": {
            "type": "string",
            "description": "Response Type",
            "example": "hotel-booking"
          }
        },
        "description": "Booking Details"
      },
      "Name": {
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 56,
            "minLength": 1,
            "pattern": "^[A-Za-z \\p{Han}\\p{Katakana}\\p{Hiragana}\\p{Hangul}-]*$",
            "type": "string",
            "description": "first name (and middle name) of room guest",
            "example": "BOB"
          },
          "lastName": {
            "maxLength": 57,
            "minLength": 1,
            "pattern": "^[A-Za-z \\p{Han}\\p{Katakana}\\p{Hiragana}\\p{Hangul}-]*$",
            "type": "string",
            "description": "last name of room guest",
            "example": "SMITH"
          },
          "title": {
            "maxLength": 54,
            "minLength": 1,
            "pattern": "^[A-Za-z -]*$",
            "type": "string",
            "description": "title/gender of room guest",
            "example": "MR",
            "enum": [
              "MR",
              "MRS",
              "MS"
            ]
          }
        },
        "description": "Guest Name"
      },
      "Payment": {
        "title": "Payment",
        "required": [
          "method"
        ],
        "type": "object",
        "properties": {
          "card": {
            "title": "Card",
            "required": [
              "cardNumber",
              "expiryDate",
              "vendorCode"
            ],
            "type": "object",
            "properties": {
              "cardNumber": {
                "maxLength": 22,
                "minLength": 2,
                "pattern": "^[0-9]*$",
                "type": "string",
                "description": "card number",
                "example": "4111111111111111"
              },
              "expiryDate": {
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[0-9]{4}-[0-9]{2}$",
                "type": "string",
                "description": "Expiration Date YYYY-MM",
                "example": "2019-01"
              },
              "vendorCode": {
                "maxLength": 2,
                "minLength": 2,
                "pattern": "^[A-Z]{2}$",
                "type": "string",
                "description": "card type (CA, VI, AX, DC...)\nExamples:\n  * CA - MasterCard (warning: use it instead of MC/IK/EC/MD/XS)\n  * VI - Visa\n  * AX - American Express\n  * DC - Diners Club\n  * AU - Carte Aurore\n  * CG - Cofinoga\n  * DS - Discover\n  * GK - Lufthansa GK Card\n  * JC - Japanese Credit Bureau\n  * TC - Torch Club\n  * TP - Universal Air Travel Card\n  * BC - Bank Card\n  * DL - Delta\n  * MA - Maestro\n  * UP - China UnionPay   \n  * VE - Visa Electron\n",
                "example": "VI"
              }
            },
            "description": "payment card details (mandatory in case of `method` creditCard)"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "method": {
            "type": "string",
            "description": "The Payment Methods:\n * creditCard (CC) - Payment Cards in `creditCards` are accepted           ",
            "example": "creditCard",
            "enum": [
              "creditCard"
            ]
          }
        },
        "description": "form of payment (mandatory in case of `acceptedPayments`/`methods`)"
      },
      "Stakeholder": {
        "required": [
          "contact",
          "name"
        ],
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "hotelRewardsMember": {
            "maxLength": 21,
            "minLength": 1,
            "pattern": "^[A-Z0-9-]{1,21}$",
            "type": "string",
            "description": "Hotel Chain Rewards Member Number. To receive your Rewards Points, access online check in, fast check out. An error is returned by the Chain if the number is invalid.\nExample Rewards Programs:\n* Marriott Bonvoy\n* Hilton Honors\n* Hyatt Rewards\n* IHG Rewards\n* Wyndham Rewards\n* Accor Live Limitless ALL\n* Best Western Rewards\n* Choice Privileges\n* Radisson Rewards\n",
            "example": "3081031320523260"
          },
          "id": {
            "type": "integer",
            "description": "item identifier",
            "example": 1
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "description": "Guest Details",
        "example": {
          "contact": {
            "email": "bob.smith@email.com",
            "phone": 33679278416
          },
          "id": 1,
          "name": {
            "firstName": "BOB",
            "lastName": "SMITH",
            "title": "MR"
          }
        }
      },
      "Warning": {
        "required": [
          "code",
          "title"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "[Integer] A machine-readable warning code from the Amadeus Canned Messages table, that will enable the API Consumers code to handle this type of warning",
            "example": 1
          },
          "detail": {
            "type": "string",
            "description": "[String] An easy-to-read explanation specific to this occurrence of the problem. It should give the API consumer an idea of what went wrong and how to recover from it. Like the title, this field value can be localized.",
            "example": "The targeted resource doesn't exist"
          },
          "title": {
            "type": "string",
            "description": "[String] A warning title from the Canned Messages table with a 1:1 correspondence to the warning code. This may be localized",
            "example": "Resource not found"
          }
        },
        "description": "Warning"
      }
    },
    "responses": {
      "BookingSell": {
        "description": "Booked",
        "content": {
          "application/vnd.amadeus+json": {
            "schema": {
              "title": "HotelBookedResponse",
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "All room bookings data",
                  "items": {
                    "$ref": "#/components/schemas/HotelBookingLight"
                  }
                },
                "warnings": {
                  "type": "array",
                  "description": "All Warnings",
                  "items": {
                    "$ref": "#/components/schemas/Warning"
                  }
                }
              },
              "example": {
                "data": [
                  {
                    "associatedRecords": [
                      {
                        "originSystemCode": "GDS",
                        "reference": "QVH2BX"
                      }
                    ],
                    "id": "XD_8138319951754",
                    "providerConfirmationId": "8138319951754",
                    "type": "hotel-booking"
                  }
                ]
              }
            }
          }
        }
      },
      "Error400ResponseCreateBooking": {
        "description": "Bad Request\n\ncode    | title                                                          | owner    | pointer\n------- | -------------------------------------------------------------- | -------- | -------\n  477   | INVALID FORMAT                                                 | Amadeus  | \n 4725   | INVALID PASSENGER ASSOCIATION                                  | Amadeus  | data/rooms/guestIds\n33555   | NUMBER OF ROOMS MISMATCH BETWEEN SHOPPING AND BOOKING          | Amadeus  | data/rooms\n33554   | PRICE HAS CHANGED. PLEASE GET A NEW OFFERID AND TRY AGAIN      | Amadeus  | data/offerId\n36803   | OFFERID HAS EXPIRED. PLEASE GET A NEW OFFERID AND TRY AGAIN    | Amadeus  | data/offerId\n 1205   | INVALID CREDIT CARD TYPE                                       | Amadeus  | data/payments/card/vendorCode\n 8517   | INVALID CREDIT CARD NUMBER                                     | Provider | data/payments/card/cardNumber\n 1427   | GUARANTEE REQUIRED                                             | Provider | data/payments/card\n 1146   | DEPOSIT REQUIRED                                               | Provider | data/payments/card\n 3659   | CREDIT CARD DEPOSIT REQUIRED                                   | Provider | data/payments/card\n 3682   | CREDIT CARD NOT ACCEPTED AT HOTEL PROPERTY                     | Provider | data/payments/card/vendorCode\n 3871   | CREDIT CARD EXPIRATION DATE INVALID FOR CHECK IN DATE          | Provider | data/payments/card/expiryDate\n \n",
        "content": {
          "application/vnd.amadeus+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "Error500ResponseCreateBooking": {
        "description": "Internal Server Error\n\ncode    | title                                                          | owner                                \n------- | -------------------------------------------------------------- | -------\n00011   | UNABLE TO PROCESS                                              | Provider\n04070   | UNABLE TO PROCESS - CONTACT HELP DESK                          | Amadeus\n",
        "content": {
          "application/vnd.amadeus+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      }
    },
    "parameters": {
      "Accept-Encoding": {
        "name": "Accept-Encoding",
        "in": "header",
        "description": "Compress the Response",
        "schema": {
          "type": "string",
          "enum": [
            "gzip",
            "identity"
          ]
        }
      },
      "Ama-Client-Ref": {
        "name": "Ama-Client-Ref",
        "in": "header",
        "description": "Client Reference to track Request/Response",
        "schema": {
          "pattern": "^[A-Z0-9_]*$",
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "bookingBody": {
        "description": "`offerId`, `guests`, `payments` and optional `rooms` for the repartition (when used the `rooms` array items must match the shopping offer `roomQuantity`)\n",
        "content": {
          "application/vnd.amadeus+json": {
            "schema": {
              "title": "BookingSchema",
              "required": [
                "data"
              ],
              "type": "object",
              "properties": {
                "data": {
                  "title": "HotelBookingQuery",
                  "required": [
                    "guests",
                    "offerId"
                  ],
                  "type": "object",
                  "properties": {
                    "guests": {
                      "maxItems": 99,
                      "minItems": 1,
                      "uniqueItems": true,
                      "type": "array",
                      "description": "minimum one guest is mandatory",
                      "items": {
                        "$ref": "#/components/schemas/Stakeholder"
                      }
                    },
                    "offerId": {
                      "maxLength": 100,
                      "minLength": 2,
                      "pattern": "^[A-Z0-9]*$",
                      "type": "string",
                      "description": "offerId to book",
                      "example": "63A93695B58821ABB0EC2B33FE9FAB24D72BF34B1BD7D707293763D8D9378FC3"
                    },
                    "payments": {
                      "maxItems": 9,
                      "minItems": 1,
                      "uniqueItems": true,
                      "type": "array",
                      "description": "payments (often mandatory)",
                      "items": {
                        "$ref": "#/components/schemas/Payment"
                      }
                    },
                    "rooms": {
                      "maxItems": 9,
                      "minItems": 1,
                      "type": "array",
                      "description": "rooms repartition (when used the `rooms` array items must match the shopping offer `roomQuantity`)",
                      "items": {
                        "title": "Room",
                        "type": "object",
                        "properties": {
                          "guestIds": {
                            "uniqueItems": true,
                            "type": "array",
                            "description": "room main guest (and accompagnants) (optional)",
                            "items": {
                              "type": "integer",
                              "example": 1
                            }
                          },
                          "paymentId": {
                            "type": "integer",
                            "description": "if missing, the first payment is used (optional)",
                            "example": 1
                          },
                          "specialRequest": {
                            "maxLength": 120,
                            "minLength": 2,
                            "type": "string",
                            "description": "special request to send to the reception (optional)",
                            "example": "I will arrive at midnight"
                          }
                        },
                        "description": "room"
                      }
                    }
                  }
                }
              },
              "example": {
                "data": {
                  "guests": [
                    {
                      "contact": {
                        "email": "bob.smith@email.com",
                        "phone": 33679278416
                      },
                      "name": {
                        "firstName": "BOB",
                        "lastName": "SMITH",
                        "title": "MR"
                      }
                    }
                  ],
                  "offerId": "NRPQNQBOJM",
                  "payments": [
                    {
                      "card": {
                        "cardNumber": "4111111111111111",
                        "expiryDate": "2026-01",
                        "vendorCode": "VI"
                      },
                      "method": "creditCard"
                    }
                  ]
                }
              }
            }
          }
        },
        "required": true
      }
    }
  },
  "x-generatedAt": "2020-02-12T17:01:55.203Z"
}