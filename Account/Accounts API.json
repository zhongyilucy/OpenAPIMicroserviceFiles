{
  "openapi": "3.0.1",
  "info": {
    "title": "Accounts API",
    "description": "The Accounts API is a collection of methods used to query a customer account. It allows the developer to retrieve account-related data such as the user account balance. It should be noted that regional variations may exist - so some fields may not be returned for certain territories.",
    "contact": {
      "name": "William Hill Labs",
      "url": "http://developer.williamhill.com",
      "email": "platform@williamhill.com"
    },
    "version": "2.0.0",
    "x-apisguru-categories": [
      "entertainment"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_WillHillHelp_profile_image.jpeg"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "https://developer.williamhill.com/wh-docs/docs-sdks/accounts/swagger/docs",
        "version": "2.0"
      }
    ],
    "x-providerName": "whapi.com",
    "x-serviceName": "accounts"
  },
  "servers": [
    {
      "url": "https://sandbox.whapi.com/v2/accounts"
    }
  ],
  "paths": {
    "/account": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Retrieves details of a customers account",
        "description": "Retrieves a limited set of customer account details. For security purposes, only a subset is supplied, which does not include fields such as security questions and answers. argFileDR1.properties argFileDR2.properties argFileGIB1.properties argFileGIB2.properties argFileGIB3.properties argFileGIB4.properties argFilePP1.properties argFilePP2.properties argFilePP3.properties argFile.properties argFilePT1.properties argFilePTE.properties argFileSCC1.properties argFileSCC2.properties argFileSCC3.properties argFileSTG.properties argFileSYS.properties CWP GatewayMigrationUtility-1.4.00-85 GatewayMigrationUtility.jar GatewayMigrationUtility.sh gmu.log inputFile.xml lib logs migratePolicy.sh migratev2CWP.sh migratev2Policy.sh retrieveCWP.sh retrievePolicy.sh updateCWP.sh updatePolicyById.sh updatePolicy.sh returned by default, others need to be selected. argFileDR1.properties argFileDR2.properties argFileGIB1.properties argFileGIB2.properties argFileGIB3.properties argFileGIB4.properties argFilePP1.properties argFilePP2.properties argFilePP3.properties argFile.properties argFilePT1.properties argFilePTE.properties argFileSCC1.properties argFileSCC2.properties argFileSCC3.properties argFileSTG.properties argFileSYS.properties CWP GatewayMigrationUtility-1.4.00-85 GatewayMigrationUtility.jar GatewayMigrationUtility.sh gmu.log inputFile.xml lib logs migratePolicy.sh migratev2CWP.sh migratev2Policy.sh retrieveCWP.sh retrievePolicy.sh updateCWP.sh updatePolicyById.sh updatePolicy.sh returned by default only in italian region.",
        "operationId": "getDetails",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "A unique identifier of your application that is generated by the API portal.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9]{19,50}$",
              "type": "string",
              "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
            },
            "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
          },
          {
            "name": "apiSecret",
            "in": "header",
            "description": "Another unique identifier for your application.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9]{19,50}$",
              "type": "string",
              "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
            },
            "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
          },
          {
            "name": "apiTicket",
            "in": "header",
            "description": "Ticket Granting Ticket obtained from a previous request",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z][a-zA-Z0-9-]{39,100}$",
              "type": "string",
              "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
            },
            "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specify an absolute field list to return (Comma-Separated List)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-eg": "extended"
            },
            "x-eg": "extended"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Specify fields in addition to the default to return (Comma-Separated List)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-eg": "extended"
            },
            "x-eg": "extended"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Specify fields from the default to exclude (Comma-Separated List)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-eg": "expiryDateTime"
            },
            "x-eg": "expiryDateTime"
          },
          {
            "name": "territory",
            "in": "header",
            "description": "Territory from which request originates",
            "schema": {
              "pattern": "^(COM|ES|IT)$",
              "type": "string",
              "x-eg": "ES"
            },
            "x-eg": "ES"
          },
          {
            "name": "languageAsPerTerritory",
            "in": "query",
            "description": "Defines response field name language, true (default) returns in language defined by territory, false returns in English",
            "schema": {
              "pattern": "^(true|false)$",
              "type": "string",
              "default": "true",
              "x-eg": false
            },
            "x-eg": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accounts"
                },
                "example": "{\n \"status*\": \"A\",\n \"userName\": \"wallet1\",\n \"accountNum*\": \"78041SJ\",\n \"accountId\": \"1653\",\n \"accountType\": \"DEP\",\n \"creationDate\": \"2016-06-28 10:50:27\",\n \"lastLogin\": \"2019-09-06 15:54:29\",\n \"countryCode\": \"UK\",\n \"title\": \"Prof\",\n \"firstName*\": \"Wha\",\n \"lastName*\": \"Pee\",\n \"secondLastName*\": \"Smith\",\n \"ipAddress\": \"10.211.33.1\",\n \"street1\": \"1\",\n \"street2\": \"Test\",\n \"county\": \"Gloucestershire\",\n \"city\": \"Leeds\",\n \"postcode\": \"LS1 1AA\",\n \"country\": \"United Kingdom\",\n \"email\": \"wallet1@wh2.com\",\n \"mobile\": \"07710100100\",\n \"telephone\": \"01131001000\",\n \"language\": \"en\",\n \"timeZone\": \"Europe/London\",\n \"nif**\": \"HMCQVC89T28M347J\",\n \"lastLogin**\": \"2020-03-10 06:44:09\",\n \"termsAndConditions\":[\n {\n \"name\": \"PlaytechCasIta\",\n \"url\": \"http://williamhill-it.custhelp.com/cgi-bin/williamhill_it.cfg/php/enduser/std_adp.php?p_faqid=7320 http://whdn.williamhill.com/content/content/Contratto.pdf http://williamhill-it.custhelp.com/cgi-bin/williamhill_it.cfg/php/enduser/std_adp.php?p_faqid=7113\"\n },\n {\n \"name\": \"PlaytechCasIta\",\n \"url\": \"http://williamhill-it.custhelp.com/cgi-bin/williamhill_it.cfg/php/enduser/std_adp.php?p_faqid=7320 http://whdn.williamhill.com/content/content/Contratto.pdf http://williamhill-it.custhelp.com/cgi-bin/williamhill_it.cfg/php/enduser/std_adp.php?p_faqid=7113\"\n },\n {\n \"name\": \"PlaytechCasIta\",\n \"url\": \"http://williamhill-it.custhelp.com/cgi-bin/williamhill_it.cfg/php/enduser/std_adp.php?p_faqid=7320 http://whdn.williamhill.com/content/content/Contratto.pdf http://williamhill-it.custhelp.com/cgi-bin/williamhill_it.cfg/php/enduser/std_adp.php?p_faqid=7113\"\n }\n ],\n \"birthPlace\":{\n \"city\": \"Roma\",\n \"province\": \"RM\",\n \"countryCode\": \"\"\n },\n \"additionalSystemStatuses\":{\n \"system\": \"cnj\",\n \"estado\": \"OK\"\n },\n \"partnerContactable\": true,\n \"contactable\": true,\n \"flags\": [\n {\n \"pocf\": true\n }\n ]\n}\n"
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountErrors"
                },
                "example": "{\n \"errors\" : [\n {\n \"code\":\"000000\",\n \"message\":\"Error Message Text\",\n \"field\":\"aparam\"\n }\n ]\n}\n"
              }
            }
          }
        },
        "x-canReturnErrors": [
          20401
        ]
      }
    },
    "/account/balance": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get a customers account balance",
        "description": "This method can be used to retrieve the customerâ€™s account balance in UK Sterling.",
        "operationId": "getBalance",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "A unique identifier of your application that is generated by the API portal.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9]{19,50}$",
              "type": "string",
              "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
            },
            "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
          },
          {
            "name": "apiSecret",
            "in": "header",
            "description": "Another unique identifier for your application.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9]{19,50}$",
              "type": "string",
              "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
            },
            "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
          },
          {
            "name": "apiTicket",
            "in": "header",
            "description": "Ticket Granting Ticket obtained from a previous request",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z][a-zA-Z0-9-]{39,100}$",
              "type": "string",
              "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
            },
            "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specify an absolute field list to return (Comma-Separated List)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-eg": "extended"
            },
            "x-eg": "extended"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Specify fields in addition to the default to return (Comma-Separated List)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-eg": "extended"
            },
            "x-eg": "extended"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Specify fields from the default to exclude (Comma-Separated List)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-eg": "expiryDateTime"
            },
            "x-eg": "expiryDateTime"
          },
          {
            "name": "territory",
            "in": "header",
            "description": "Territory from which request originates",
            "schema": {
              "pattern": "^(COM|ES|IT)$",
              "type": "string",
              "x-eg": "ES"
            },
            "x-eg": "ES"
          },
          {
            "name": "languageAsPerTerritory",
            "in": "query",
            "description": "Defines response field name language, true (default) returns in language defined by territory, false returns in English",
            "schema": {
              "pattern": "^(true|false)$",
              "type": "string",
              "default": "true",
              "x-eg": false
            },
            "x-eg": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountBalance"
                },
                "example": "{\n \"currencyCode\": \"GBP\",\n \"balance\": 234.23,\n \"availableFunds\": 234.23,\n \"withdrawableFunds\": 234.23\n}\n"
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountErrors"
                },
                "example": "{\n \"errors\" : [\n {\n \"code\":\"000000\",\n \"message\":\"Error Message Text\",\n \"field\":\"aparam\"\n }\n ]\n}\n"
              }
            }
          }
        }
      }
    },
    "/account/flags": {
      "post": {
        "tags": [
          "flags"
        ],
        "summary": "Sets a flag based on name to value provided for the user.",
        "description": "Sets a flag based on name to value provided for the user.",
        "operationId": "setAccountFlags",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "A unique identifier of your application that is generated by the API portal.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9]{19,50}$",
              "type": "string",
              "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
            },
            "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
          },
          {
            "name": "apiSecret",
            "in": "header",
            "description": "Another unique identifier for your application.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9]{19,50}$",
              "type": "string",
              "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
            },
            "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
          },
          {
            "name": "apiTicket",
            "in": "header",
            "description": "Ticket Granting Ticket obtained from a previous request",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z][a-zA-Z0-9-]{39,100}$",
              "type": "string",
              "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
            },
            "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
          },
          {
            "name": "apiCountryCode",
            "in": "header",
            "description": "A two-character ISO 3166-1-Alpha-2 code representing the country API to use.",
            "schema": {
              "pattern": "^(GB|ES|IT)$",
              "type": "string",
              "default": "GB",
              "x-eg": "ES"
            },
            "x-eg": "ES"
          },
          {
            "name": "territory",
            "in": "header",
            "description": "Territory from which request originates",
            "schema": {
              "pattern": "^(COM|ES|IT)$",
              "type": "string",
              "x-eg": "ES"
            },
            "x-eg": "ES"
          },
          {
            "name": "languageAsPerTerritory",
            "in": "query",
            "description": "Defines response field name language, true (default) returns in language defined by territory, false returns in English",
            "schema": {
              "pattern": "^(true|false)$",
              "type": "string",
              "default": "true",
              "x-eg": false
            },
            "x-eg": false
          }
        ],
        "requestBody": {
          "description": "Array of KVP for setting flags.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/flags"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountFlagsSet"
                },
                "example": "{\n \"token\": \"e0dX/YhYaRax7aI0/SkNS9G1rXlZZWOD64t64JDijaCfEhRe0A==\"\n}\n"
              }
            }
          },
          "404": {
            "description": "No such customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountErrors"
                },
                "example": "{\n \"errors\" : [\n {\n \"code\":\"10003\",\n \"message\":\"Resource Not Found\",\n \"field\":\"token\"\n }\n ]\n}\n"
              }
            }
          }
        },
        "x-canReturnErrors": [
          0
        ],
        "x-codegen-request-body-name": "flags"
      }
    },
    "/account/payments": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Gets a customer's account payments",
        "description": "Retrieves the customerâ€™s account payments in UK Sterling.",
        "operationId": "getPayments",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "A unique identifier of your application that is generated by the API portal.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9]{19,50}$",
              "type": "string",
              "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
            },
            "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
          },
          {
            "name": "apiSecret",
            "in": "header",
            "description": "Another unique identifier for your application.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9]{19,50}$",
              "type": "string",
              "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
            },
            "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
          },
          {
            "name": "apiTicket",
            "in": "header",
            "description": "Ticket Granting Ticket obtained from a previous request",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z][a-zA-Z0-9-]{39,100}$",
              "type": "string",
              "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
            },
            "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to return (Used with pageSize)",
            "schema": {
              "pattern": "^[1-9]{1,7}$",
              "type": "number",
              "default": 1,
              "x-eg": 10
            },
            "x-eg": 10
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Specify the number of results to return per page.",
            "schema": {
              "pattern": "^[1-9]{1,7}$",
              "type": "number",
              "default": 100,
              "x-eg": 15
            },
            "x-eg": 15
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "The FROM datetime from payments to be returned. (yyyy-MM-ddTHH:mm:ss)",
            "schema": {
              "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})\\:(\\d{2})\\:(\\d{2})$",
              "type": "string",
              "x-eg": "2013-09-25T12:34:20.000Z"
            },
            "x-eg": "2013-09-25T12:34:20.000Z"
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "The TO datetime for payments to be returned. (yyyy-MM-ddTHH:mm:ss)",
            "schema": {
              "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})\\:(\\d{2})\\:(\\d{2})[+-](\\d{2})\\:(\\d{2})$",
              "type": "string",
              "x-eg": "2013-09-25T12:34:20.000Z"
            },
            "x-eg": "2013-09-25T12:34:20.000Z"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The order the response will be retuned by. i.e. date,desc",
            "schema": {
              "type": "string",
              "default": "date,asc",
              "x-eg": "date,desc"
            },
            "x-eg": "date,desc"
          },
          {
            "name": "transactionType",
            "in": "query",
            "description": "Allows the user to select with they want to see withdrawls or deposits. If it is omitted from the query both types will be returned",
            "schema": {
              "pattern": "^(W|D)$",
              "type": "string",
              "x-eg": "W"
            },
            "x-eg": "W"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specify an absolute field list to return (Comma-Separated List)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-eg": "extended"
            },
            "x-eg": "extended"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Specify fields in addition to the default to return (Comma-Separated List)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-eg": "extended"
            },
            "x-eg": "extended"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Specify fields from the default to exclude (Comma-Separated List)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-eg": "expiryDateTime"
            },
            "x-eg": "expiryDateTime"
          },
          {
            "name": "territory",
            "in": "header",
            "description": "Territory from which request originates",
            "schema": {
              "pattern": "^(COM|ES|IT)$",
              "type": "string",
              "x-eg": "ES"
            },
            "x-eg": "ES"
          },
          {
            "name": "languageAsPerTerritory",
            "in": "query",
            "description": "Defines response field name language, true (default) returns in language defined by territory, false returns in English",
            "schema": {
              "pattern": "^(true|false)$",
              "type": "string",
              "default": "true",
              "x-eg": false
            },
            "x-eg": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success - Payments obtained",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getPayments"
                },
                "example": "{\n \"payments\":\n [\n {\n \"id\": \"277\",\n \"methodId\": \"111\",\n \"type\": \"CSH\",\n \"action\": \"D\",\n \"paymentDateTime\": \"2013-09-25T13:34:20\",\n \"amount\": \"20.56\",\n \"commission\": \"0.00\",\n \"status\": \"Y\",\n \"channel\": \"M\",\n \"ipAddress\": \"10.0.0.12\"\n } \n ]\n}\n"
              }
            }
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountErrors"
                },
                "example": "{\n \"errors\" : [\n {\n \"code\":\"000000\",\n \"message\":\"Error Message Text\",\n \"field\":\"aparam\"\n }\n ]\n}\n"
              }
            }
          },
          "404": {
            "description": "No such customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountErrors"
                },
                "example": "{\n \"errors\" : [\n {\n \"code\":\"10003\",\n \"message\":\"Resource Not Found\",\n \"field\":\"token\"\n }\n ]\n}\n"
              }
            }
          }
        },
        "x-canReturnErrors": [
          20401
        ]
      }
    },
    "/account/plusCard": {
      "get": {
        "tags": [
          "Plus Card",
          "Omni",
          "Wallet",
          "Card Number"
        ],
        "summary": "Gets a customer's plus card details if they exist.",
        "description": "Gets a customer's plus card details if they exist.",
        "operationId": "getPlusCardDetails",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "A unique identifier of your application that is generated by the API portal.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9]{19,50}$",
              "type": "string",
              "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
            },
            "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
          },
          {
            "name": "apiSecret",
            "in": "header",
            "description": "Another unique identifier for your application.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9]{19,50}$",
              "type": "string",
              "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
            },
            "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
          },
          {
            "name": "apiTicket",
            "in": "header",
            "description": "Ticket Granting Ticket obtained from a previous request",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z][a-zA-Z0-9-]{39,100}$",
              "type": "string",
              "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
            },
            "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specify an absolute field list to return (Comma-Separated List)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-eg": "extended"
            },
            "x-eg": "extended"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Specify fields in addition to the default to return (Comma-Separated List)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-eg": "extended"
            },
            "x-eg": "extended"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Specify fields from the default to exclude (Comma-Separated List)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-eg": "expiryDateTime"
            },
            "x-eg": "expiryDateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - Plus Card Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/plusCardDetails"
                },
                "example": "{\n \"card\":\n {\n \"blocked\": false,\n \"cardNumber\": \"1234123412341234\"\n },\n \"phone\":\n {\n \"phoneNumber\": \"09876543210\"\n },\n \"pin\":\n {\n \"blocked\": false,\n \"attemptsRemaining\": 2\n },\n \"onlineAccount\":\n {\n \"onlineAccountNumber\": \"DF412323\",\n \"name\": \"George Bernard Shaw\"\n }\n \"retailAccount\": \n {\n \"selfExcluded\": true\n }\n}\n"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountErrors"
                },
                "example": "{\n \"errors\" : [\n {\n \"code\":\"000000\",\n \"message\":\"Error Message Text\",\n \"field\":\"aparam\"\n }\n ]\n} \n"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountErrors"
                },
                "example": "{\n \"errors\" : [\n {\n \"code\":\"000000\",\n \"message\":\"Error Message Text\",\n \"field\":\"aparam\"\n }\n ]\n} \n"
              }
            }
          },
          "404": {
            "description": "No such plus card customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountErrors"
                },
                "example": "{\n \"errors\" : [\n {\n \"code\":\"10003\",\n \"message\":\"Resource Not Found\",\n \"field\":\"token\"\n }\n ]\n}\n"
              }
            }
          }
        },
        "x-canReturnErrors": [
          20401
        ]
      }
    },
    "/account/plusCard/lostStolen": {
      "post": {
        "tags": [
          "Plus Card",
          "Omni",
          "Wallet",
          "Card Number",
          "Lost",
          "Stolen"
        ],
        "summary": "Sets a customer's plus card as Lost/Stolen",
        "description": "Sets a customer's plus card as Lost/Stolen",
        "operationId": "setLostStolen",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "A unique identifier of your application that is generated by the API portal.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9]{19,50}$",
              "type": "string",
              "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
            },
            "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
          },
          {
            "name": "apiSecret",
            "in": "header",
            "description": "Another unique identifier for your application.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9]{19,50}$",
              "type": "string",
              "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
            },
            "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
          },
          {
            "name": "apiTicket",
            "in": "header",
            "description": "Ticket Granting Ticket obtained from a previous request",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z][a-zA-Z0-9-]{39,100}$",
              "type": "string",
              "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
            },
            "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
          }
        ],
        "responses": {
          "204": {
            "description": "Success - Card Reported Lost / Stolen",
            "content": {}
          },
          "401": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountErrors"
                },
                "example": "{\n \"errors\" : [\n {\n \"code\":\"000000\",\n \"message\":\"Unauthorised\"\n }\n ]\n} \n"
              }
            }
          },
          "404": {
            "description": "No such plus card customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountErrors"
                },
                "example": "{\n \"errors\" : [\n {\n \"code\":\"10003\",\n \"message\":\"Resource Not Found\",\n \"field\":\"token\"\n }\n ]\n}\n"
              }
            }
          }
        },
        "x-canReturnErrors": [
          20401
        ]
      }
    },
    "/account/plusCard/phone/{oldPhoneNumber}": {
      "post": {
        "tags": [
          "Plus Card",
          "Omni",
          "Wallet",
          "Card Number",
          "Phone"
        ],
        "summary": "Sets a customer's plus card phone number",
        "description": "Sets a customer's plus card phone number",
        "operationId": "setPhoneNumber",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "A unique identifier of your application that is generated by the API portal.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9]{19,50}$",
              "type": "string",
              "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
            },
            "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
          },
          {
            "name": "apiSecret",
            "in": "header",
            "description": "Another unique identifier for your application.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9]{19,50}$",
              "type": "string",
              "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
            },
            "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
          },
          {
            "name": "apiTicket",
            "in": "header",
            "description": "Ticket Granting Ticket obtained from a previous request",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z][a-zA-Z0-9-]{39,100}$",
              "type": "string",
              "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
            },
            "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
          },
          {
            "name": "oldPhoneNumber",
            "in": "path",
            "description": "Old phone number to replace",
            "required": true,
            "schema": {
              "type": "string",
              "x-eg": 447870818838
            },
            "x-eg": 447870818838
          }
        ],
        "requestBody": {
          "description": "Phone Number to be set.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/phone"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success - New Phone number Created",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountErrors"
                },
                "example": "{\n \"errors\" : [\n {\n \"code\":\"000000\",\n \"message\":\"Error Message Text\",\n \"field\":\"aparam\"\n }\n ]\n} \n"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountErrors"
                },
                "example": "{\n \"errors\" : [\n {\n \"code\":\"000000\",\n \"message\":\"Error Message Text\",\n \"field\":\"aparam\"\n }\n ]\n} \n"
              }
            }
          },
          "404": {
            "description": "No such plus card customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountErrors"
                },
                "example": "{\n \"errors\" : [\n {\n \"code\":\"10003\",\n \"message\":\"Resource Not Found\",\n \"field\":\"token\"\n }\n ]\n}\n"
              }
            }
          }
        },
        "x-canReturnErrors": [
          20401
        ],
        "x-codegen-request-body-name": "phoneNumber"
      }
    },
    "/account/plusCard/pin": {
      "put": {
        "tags": [
          "Plus Card",
          "Omni",
          "Wallet",
          "Card Number",
          "PIN"
        ],
        "summary": "Updates a customer's plus card pin",
        "description": "Updates a customer's plus card pin",
        "operationId": "updatePin",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "A unique identifier of your application that is generated by the API portal.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9]{19,50}$",
              "type": "string",
              "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
            },
            "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
          },
          {
            "name": "apiSecret",
            "in": "header",
            "description": "Another unique identifier for your application.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9]{19,50}$",
              "type": "string",
              "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
            },
            "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
          },
          {
            "name": "apiTicket",
            "in": "header",
            "description": "Ticket Granting Ticket obtained from a previous request",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z][a-zA-Z0-9-]{39,100}$",
              "type": "string",
              "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
            },
            "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
          }
        ],
        "requestBody": {
          "description": "PIN to be set.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success - PIN Updated",
            "content": {}
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountErrors"
                },
                "example": "{\n \"errors\" : [\n {\n \"code\":\"000000\",\n \"message\":\"Error Message Text\",\n \"field\":\"aparam\"\n }\n ]\n} \n"
              }
            }
          },
          "404": {
            "description": "No such plus card customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountErrors"
                },
                "example": "{\n \"errors\" : [\n {\n \"code\":\"10003\",\n \"message\":\"Resource Not Found\",\n \"field\":\"token\"\n }\n ]\n}\n"
              }
            }
          }
        },
        "x-canReturnErrors": [
          20401
        ],
        "x-codegen-request-body-name": "pin"
      },
      "post": {
        "tags": [
          "Plus Card",
          "Omni",
          "Wallet",
          "Card Number",
          "PIN"
        ],
        "summary": "Sets a customer's plus card pin",
        "description": "Sets a customer's plus card pin",
        "operationId": "setPin",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "A unique identifier of your application that is generated by the API portal.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9]{19,50}$",
              "type": "string",
              "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
            },
            "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
          },
          {
            "name": "apiSecret",
            "in": "header",
            "description": "Another unique identifier for your application.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9]{19,50}$",
              "type": "string",
              "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
            },
            "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
          },
          {
            "name": "apiTicket",
            "in": "header",
            "description": "Ticket Granting Ticket obtained from a previous request",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z][a-zA-Z0-9-]{39,100}$",
              "type": "string",
              "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
            },
            "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
          }
        ],
        "requestBody": {
          "description": "PIN to be set.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success - PIN Created",
            "content": {}
          },
          "400": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountErrors"
                },
                "example": "{\n \"errors\" : [\n {\n \"code\":\"000000\",\n \"message\":\"Error Message Text\",\n \"field\":\"aparam\"\n }\n ]\n} \n"
              }
            }
          },
          "404": {
            "description": "No such plus card customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountErrors"
                },
                "example": "{\n \"errors\" : [\n {\n \"code\":\"10003\",\n \"message\":\"Resource Not Found\",\n \"field\":\"token\"\n }\n ]\n}\n"
              }
            }
          }
        },
        "x-canReturnErrors": [
          20401
        ],
        "x-codegen-request-body-name": "pin"
      }
    }
  },
  "components": {
    "schemas": {
      "accountBalance": {
        "required": [
          "balance",
          "currencyCode"
        ],
        "type": "object",
        "properties": {
          "availableFunds": {
            "type": "number",
            "description": "Current available funds in this account"
          },
          "balance": {
            "type": "number",
            "description": "Current balance of account"
          },
          "currencyCode": {
            "type": "string",
            "description": "A three-character ISO4217 currency code. This will be the currency that the user registered in"
          },
          "withdrawableFunds": {
            "type": "number",
            "description": "Current withdrawable balance of this account"
          }
        }
      },
      "accountErrors": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      },
      "accountFlagsSet": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "accounts": {
        "required": [
          "accountNum",
          "firstName",
          "lastName",
          "secondLastName",
          "status"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account ID"
          },
          "accountNum": {
            "type": "string",
            "description": "Account number"
          },
          "additionalSystemStatuses": {
            "type": "string",
            "description": "Statuses of systems specific to that account - seperate from account status"
          },
          "birthPlace": {
            "type": "string",
            "description": "Birthplace details (city, province country code) for customer - primaly used in italy"
          },
          "city": {
            "type": "string",
            "description": "The city of the customer's address"
          },
          "contactable": {
            "type": "boolean",
            "description": "Is it okay for the bookmaker to contact the customer with marketing information"
          },
          "country": {
            "type": "string",
            "description": "The country of the customer's address"
          },
          "countryCode": {
            "type": "string",
            "description": "A two-character ISO 3166-1-Alpha-2 code representing the customer's country of registration"
          },
          "county": {
            "type": "string",
            "description": "The county of the customer's address"
          },
          "currencyCode": {
            "type": "string",
            "description": "A three-character ISO4217 currency code. This will be the currency that the customer registered in"
          },
          "customerId": {
            "type": "string",
            "description": "Customer ID"
          },
          "email": {
            "type": "string",
            "description": "The primary email address of the customer with that account. Must be unique."
          },
          "fax": {
            "type": "string",
            "description": "The fax number of the customer"
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the customer with that account"
          },
          "flags": {
            "$ref": "#/components/schemas/flags"
          },
          "ipAddress": {
            "type": "string",
            "description": "Registered ip address of user"
          },
          "language": {
            "type": "string",
            "description": "The registered language of the customer"
          },
          "lastLogin": {
            "type": "string",
            "description": "The last time customer logged in - mandatory in italy - available if populated in other territories"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the customer with that account"
          },
          "mobile": {
            "type": "string",
            "description": "The mobile number of the customer with that account"
          },
          "nif": {
            "type": "string",
            "description": "The national identifcation number of the customer (italy only - mandatory response field)"
          },
          "office": {
            "type": "string",
            "description": "Office phone number of customer"
          },
          "partnerContactable": {
            "type": "boolean",
            "description": "Is it okay for the bookmaker to give the user's contact details to companies with which it has partnerships"
          },
          "postcode": {
            "type": "string",
            "description": "The postCode of the customer's address"
          },
          "secondLastName": {
            "type": "string",
            "description": "The second last name of the customer with that account - primarily used in Spanish territory"
          },
          "status": {
            "type": "string",
            "description": "Account status"
          },
          "street1": {
            "type": "string",
            "description": "Line number 1 of the customer's street address written out in full"
          },
          "street2": {
            "type": "string",
            "description": "Line number 2 of the customer's street address written out in full"
          },
          "street3": {
            "type": "string",
            "description": "Line number 3 of the customer's street address written out in full"
          },
          "terms and conditions": {
            "type": "string",
            "description": "name and url location of terms and conditions applicable to this account"
          },
          "timeZone": {
            "type": "string",
            "description": "The primary time zone for the customer"
          },
          "title": {
            "type": "string",
            "description": "The title of the name of the customer with that account"
          }
        }
      },
      "error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A unique William Hill identifier for the error"
          },
          "field": {
            "type": "string",
            "description": "To help pinpoint the exact parameter where a request has failed"
          },
          "message": {
            "type": "string",
            "description": "A unique William Hill text string to enable you to identify the error (in English only)"
          }
        }
      },
      "flags": {
        "type": "array",
        "items": {
          "required": [
            "flagName",
            "flagValue"
          ],
          "type": "object",
          "properties": {
            "flagName": {
              "type": "string",
              "description": "Name of the flag to set."
            },
            "flagReason": {
              "type": "string",
              "description": "The reason that the flag has been set."
            },
            "flagValue": {
              "type": "string",
              "description": "Value to set the flag to."
            }
          }
        }
      },
      "getPayments": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/payment"
            }
          }
        }
      },
      "onlineAccount": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "x-eg": "George Bernard Shaw"
          },
          "onlineAccountNumber": {
            "type": "string",
            "x-eg": "DF412323"
          }
        },
        "description": "Online Account"
      },
      "payment": {
        "required": [
          "action",
          "amount",
          "id",
          "paymentDateTime",
          "status"
        ],
        "type": "object",
        "properties": {
          "action": {
            "pattern": "(D|W)",
            "type": "string",
            "description": "Action of the payment (D = Deposit, W = withdrawal)"
          },
          "amount": {
            "type": "number",
            "description": "The amount of the payment"
          },
          "channel": {
            "type": "string",
            "description": "The channel through which the payment was made"
          },
          "commision": {
            "type": "number",
            "description": "The commision for the payment"
          },
          "id": {
            "type": "string",
            "description": "ID of the payment"
          },
          "ipAddress": {
            "type": "string",
            "description": "The IP address from which the payment was made"
          },
          "methodId": {
            "type": "string",
            "description": "ID of the payment method"
          },
          "paymentDateTime": {
            "type": "string",
            "description": "The date and time when the payment was made"
          },
          "status": {
            "type": "string",
            "description": "The status of the payment"
          },
          "type": {
            "pattern": "([A-Za-z]*)",
            "type": "string",
            "description": "Type of the payment"
          }
        }
      },
      "phone": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "x-eg": "09876543210"
          }
        },
        "description": "Phone Number"
      },
      "pin": {
        "pattern": "[0-9]{4}",
        "type": "number",
        "x-eg": 1234
      },
      "pinStatus": {
        "type": "object",
        "properties": {
          "attemptsRemaining": {
            "type": "number"
          },
          "blocked": {
            "type": "boolean"
          }
        },
        "description": "PIN object - if this object is not returned in plusCardDetails object then it has not been set."
      },
      "plusCard": {
        "type": "object",
        "properties": {
          "blocked": {
            "type": "boolean"
          },
          "cardNumber": {
            "type": "string"
          }
        },
        "description": "Plus Card"
      },
      "plusCardDetails": {
        "type": "object",
        "properties": {
          "card": {
            "$ref": "#/components/schemas/plusCard"
          },
          "onlineAccount": {
            "$ref": "#/components/schemas/onlineAccount"
          },
          "phone": {
            "$ref": "#/components/schemas/phone"
          },
          "pin": {
            "$ref": "#/components/schemas/pinStatus"
          },
          "retailAccount": {
            "$ref": "#/components/schemas/retailAccount"
          }
        },
        "description": "Plus Card Details and linked accounts"
      },
      "retailAccount": {
        "type": "object",
        "properties": {
          "selfExcluded": {
            "type": "boolean"
          }
        },
        "description": "Retail Account"
      }
    },
    "parameters": {
      "param_apiCountryCode": {
        "name": "apiCountryCode",
        "in": "header",
        "description": "A two-character ISO 3166-1-Alpha-2 code representing the country API to use.",
        "schema": {
          "pattern": "^(GB|ES|IT)$",
          "type": "string",
          "default": "GB",
          "x-eg": "ES"
        },
        "x-eg": "ES"
      },
      "param_apiKey": {
        "name": "apiKey",
        "in": "header",
        "description": "A unique identifier of your application that is generated by the API portal.",
        "required": true,
        "schema": {
          "pattern": "^[a-zA-Z0-9]{19,50}$",
          "type": "string",
          "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
        },
        "x-eg": "l7xxa54460c573b5497c9b24b505xxxxxxxx"
      },
      "param_apiSecret": {
        "name": "apiSecret",
        "in": "header",
        "description": "Another unique identifier for your application.",
        "required": true,
        "schema": {
          "pattern": "^[a-zA-Z0-9]{19,50}$",
          "type": "string",
          "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
        },
        "x-eg": "355b1e522c544222ab4ff318xxxxxxxx"
      },
      "param_apiTicket": {
        "name": "apiTicket",
        "in": "header",
        "description": "Ticket Granting Ticket obtained from a previous request",
        "required": true,
        "schema": {
          "pattern": "^[a-zA-Z][a-zA-Z0-9-]{39,100}$",
          "type": "string",
          "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
        },
        "x-eg": "TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349"
      },
      "param_exclude": {
        "name": "exclude",
        "in": "query",
        "description": "Specify fields from the default to exclude (Comma-Separated List)",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-eg": "expiryDateTime"
        },
        "x-eg": "expiryDateTime"
      },
      "param_fields": {
        "name": "fields",
        "in": "query",
        "description": "Specify an absolute field list to return (Comma-Separated List)",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-eg": "extended"
        },
        "x-eg": "extended"
      },
      "param_fromDateTime": {
        "name": "dateFrom",
        "in": "query",
        "description": "The FROM datetime from payments to be returned. (yyyy-MM-ddTHH:mm:ss)",
        "schema": {
          "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})\\:(\\d{2})\\:(\\d{2})$",
          "type": "string",
          "x-eg": "2013-09-25T12:34:20.000Z"
        },
        "x-eg": "2013-09-25T12:34:20.000Z"
      },
      "param_include": {
        "name": "include",
        "in": "query",
        "description": "Specify fields in addition to the default to return (Comma-Separated List)",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-eg": "extended"
        },
        "x-eg": "extended"
      },
      "param_languageAsPerTerritory": {
        "name": "languageAsPerTerritory",
        "in": "query",
        "description": "Defines response field name language, true (default) returns in language defined by territory, false returns in English",
        "schema": {
          "pattern": "^(true|false)$",
          "type": "string",
          "default": "true",
          "x-eg": false
        },
        "x-eg": false
      },
      "param_oldPhoneNumber": {
        "name": "oldPhoneNumber",
        "in": "path",
        "description": "Old phone number to replace",
        "required": true,
        "schema": {
          "type": "string",
          "x-eg": 447870818838
        },
        "x-eg": 447870818838
      },
      "param_page": {
        "name": "page",
        "in": "query",
        "description": "The page number to return (Used with pageSize)",
        "schema": {
          "pattern": "^[1-9]{1,7}$",
          "type": "number",
          "default": 1,
          "x-eg": 10
        },
        "x-eg": 10
      },
      "param_pageSize": {
        "name": "pageSize",
        "in": "query",
        "description": "Specify the number of results to return per page.",
        "schema": {
          "pattern": "^[1-9]{1,7}$",
          "type": "number",
          "default": 100,
          "x-eg": 15
        },
        "x-eg": 15
      },
      "param_sort": {
        "name": "sort",
        "in": "query",
        "description": "The order the response will be retuned by. i.e. date,desc",
        "schema": {
          "type": "string",
          "default": "date,asc",
          "x-eg": "date,desc"
        },
        "x-eg": "date,desc"
      },
      "param_territory": {
        "name": "territory",
        "in": "header",
        "description": "Territory from which request originates",
        "schema": {
          "pattern": "^(COM|ES|IT)$",
          "type": "string",
          "x-eg": "ES"
        },
        "x-eg": "ES"
      },
      "param_toDateTime": {
        "name": "dateTo",
        "in": "query",
        "description": "The TO datetime for payments to be returned. (yyyy-MM-ddTHH:mm:ss)",
        "schema": {
          "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})\\:(\\d{2})\\:(\\d{2})[+-](\\d{2})\\:(\\d{2})$",
          "type": "string",
          "x-eg": "2013-09-25T12:34:20.000Z"
        },
        "x-eg": "2013-09-25T12:34:20.000Z"
      },
      "param_transactionFilter": {
        "name": "transactionType",
        "in": "query",
        "description": "Allows the user to select with they want to see withdrawls or deposits. If it is omitted from the query both types will be returned",
        "schema": {
          "pattern": "^(W|D)$",
          "type": "string",
          "x-eg": "W"
        },
        "x-eg": "W"
      }
    }
  },
  "x-customerrors": [
    {
      "code": 20401,
      "message": "Account details are not available for temporary accounts",
      "status": 400
    },
    {
      "code": 20402,
      "message": "Account status not available",
      "status": 404
    }
  ],
  "x-docchapters": [
    "fieldSelection",
    "apiSummary",
    "headAndOptions",
    "docsAndSdks",
    "errorHandling",
    "statusCodes"
  ],
  "x-globalerrors": null
}