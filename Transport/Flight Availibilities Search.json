{
  "openapi": "3.0.1",
  "info": {
    "title": "Flight Availibilities Search",
    "description": "This api checks the availability of flights",
    "version": "1.0.2",
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_amadeus.com_images_en_technology_mobile-tablet_mobile-woman-office-city.jpg.transform_medium_img.jpg"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "https://raw.githubusercontent.com/amadeus4dev/amadeus-open-api-specification/main/spec/json/FlightAvailabilitiesSearch_v1_swagger_specification.json",
        "version": "2.0"
      }
    ],
    "x-providerName": "amadeus.com",
    "x-release-note": {
      "1.0.0": [
        "Initial release of Flight Availibilities Search"
      ]
    },
    "x-serviceName": "amadeus-flight-availabilities-search",
    "x-status": "validated",
    "x-tags": [
      "#quick-connect",
      "#online-retail",
      "#mobile-services",
      "#ama-for-dev"
    ]
  },
  "servers": [
    {
      "url": "https://test.api.amadeus.com/v1"
    }
  ],
  "paths": {
    "/shopping/availability/flight-availabilities": {
      "post": {
        "tags": [
          "Availibility"
        ],
        "summary": "Return list of Flight Availabilities based on posted searching criteria.",
        "operationId": "searchFlightAvailabilities",
        "parameters": [
          {
            "name": "X-HTTP-Method-Override",
            "in": "header",
            "description": "the HTTP method to apply",
            "required": true,
            "schema": {
              "type": "string",
              "default": "GET"
            }
          }
        ],
        "requestBody": {
          "description": "list of criteria to retrieve a list of flight availabilities",
          "content": {
            "application/vnd.amadeus+json": {
              "schema": {
                "$ref": "#/components/schemas/GetFlightAvailabilitiesQuery"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/vnd.amadeus+json": {
                "schema": {
                  "title": "Success_Availability",
                  "type": "object",
                  "example": {
                    "data": [
                      {
                        "duration": "PT10H35M",
                        "id": "1",
                        "instantTicketingRequired": false,
                        "originDestinationId": "1",
                        "paymentCardRequired": false,
                        "segments": [
                          {
                            "aircraft": {
                              "code": "772"
                            },
                            "arrival": {
                              "at": "2023-11-15T08:05:00.000Z",
                              "iataCode": "LHR",
                              "terminal": "4"
                            },
                            "availabilityClasses": [
                              {
                                "class": "F",
                                "numberOfBookableSeats": 9
                              },
                              {
                                "class": "J",
                                "numberOfBookableSeats": 9
                              },
                              {
                                "class": "I",
                                "numberOfBookableSeats": 9
                              },
                              {
                                "class": "W",
                                "numberOfBookableSeats": 9
                              },
                              {
                                "class": "Y",
                                "numberOfBookableSeats": 9
                              },
                              {
                                "class": "B",
                                "numberOfBookableSeats": 9
                              },
                              {
                                "class": "H",
                                "numberOfBookableSeats": 9
                              },
                              {
                                "class": "K",
                                "numberOfBookableSeats": 9
                              },
                              {
                                "class": "M",
                                "numberOfBookableSeats": 9
                              },
                              {
                                "class": "G",
                                "numberOfBookableSeats": 9
                              },
                              {
                                "class": "X",
                                "numberOfBookableSeats": 9
                              }
                            ],
                            "blacklistedInEU": false,
                            "carrierCode": "6X",
                            "departure": {
                              "at": "2023-11-14T20:25:00.000Z",
                              "iataCode": "BOS",
                              "terminal": "E"
                            },
                            "id": "1",
                            "number": "214",
                            "numberOfStops": 0
                          },
                          {
                            "aircraft": {
                              "code": "320"
                            },
                            "arrival": {
                              "at": "2023-11-15T13:00:00.000Z",
                              "iataCode": "MAD"
                            },
                            "availabilityClasses": [
                              {
                                "class": "J",
                                "numberOfBookableSeats": 9
                              },
                              {
                                "class": "I",
                                "numberOfBookableSeats": 9
                              },
                              {
                                "class": "Y",
                                "numberOfBookableSeats": 9
                              }
                            ],
                            "blacklistedInEU": false,
                            "carrierCode": "6X",
                            "departure": {
                              "at": "2023-11-15T10:30:00.000Z",
                              "iataCode": "LHR"
                            },
                            "id": "2",
                            "number": "9931",
                            "numberOfStops": 0
                          }
                        ],
                        "source": "GDS",
                        "type": "flight-availability"
                      }
                    ],
                    "dictionaries": {
                      "locations": {
                        "BOS": {
                          "cityCode": "BOS",
                          "countryCode": "US"
                        },
                        "LHR": {
                          "cityCode": "LON",
                          "countryCode": "GB"
                        },
                        "MAD": {
                          "cityCode": "MAD",
                          "countryCode": "ES"
                        }
                      }
                    },
                    "meta": {
                      "count": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "code    | title                                 \n------- | ------------------------------------- \n425     | INVALID DATE\n477     | INVALID FORMAT\n572     | INVALID OPTION\n2668    | PARAMETER COMBINATION INVALID/RESTRICTED\n2781    | INVALID LENGTH\n4926    | INVALID DATA RECEIVED\n9880    | SELECTED DATE IS TOO FAR IN THE FUTURE\n10661   | MAXIMUM NUMBER OF OCCURRENCES EXCEEDED \n32171   | MANDATORY DATA MISSING\n",
            "content": {
              "application/vnd.amadeus+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error_400"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/vnd.amadeus+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error_500"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "getFlightAvailabilitiesBody"
      }
    }
  },
  "components": {
    "schemas": {
      "AircraftEntry": {
        "type": "object",
        "additionalProperties": {
          "type": "string",
          "description": "the manufacturer/model of aircraft"
        }
      },
      "AircraftEquipment": {
        "type": "object",
        "properties": {
          "code": {
            "pattern": "[a-zA-Z0-9]{3}",
            "type": "string",
            "description": "IATA aircraft code (http://www.flugzeuginfo.net/table_accodes_iata_en.php)\n",
            "example": "318"
          }
        },
        "description": "information related to the aircraft"
      },
      "AllotmentDetails": {
        "title": "AllotmentDetails",
        "type": "object",
        "properties": {
          "tourName": {
            "type": "string",
            "description": "The tour name agreed for this specific allotment."
          },
          "tourReference": {
            "type": "string",
            "description": "The tour reference agreed for this specific allotment."
          }
        }
      },
      "AvailabilityClass": {
        "type": "object",
        "properties": {
          "class": {
            "pattern": "[A-Z]{1}",
            "type": "string",
            "description": "The code of the booking class, a.k.a. class of service or Reservations/Booking Designator (RBD)",
            "example": "A"
          },
          "closedStatus": {
            "type": "string",
            "description": "Status of the booking class when it is closed.",
            "example": "WAITLIST_OPEN",
            "enum": [
              "WAITLIST_OPEN",
              "WAITLIST_CLOSED",
              "ON_REQUEST"
            ]
          },
          "numberOfBookableSeats": {
            "maximum": 9,
            "minimum": 1,
            "type": "number",
            "description": "Number of seats bookable in a single request. Can not be higher than 9.",
            "example": 9
          },
          "tourAllotment": {
            "$ref": "#/components/schemas/TourAllotment"
          }
        }
      },
      "CabinRestriction": {
        "title": "CabinRestriction",
        "type": "object",
        "properties": {
          "cabin": {
            "$ref": "#/components/schemas/TravelClass"
          },
          "originDestinationIds": {
            "title": "originDestinationIds",
            "type": "array",
            "description": "The list of originDestination identifiers for which the cabinRestriction applies",
            "example": [
              1,
              2
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CarrierEntry": {
        "type": "object",
        "additionalProperties": {
          "type": "string",
          "description": "the carrier name"
        }
      },
      "CarrierRestrictions": {
        "type": "object",
        "properties": {
          "blacklistedInEUAllowed": {
            "type": "boolean",
            "description": "This flag enable/disable filtering of blacklisted airline by EU. The list of the banned airlines is published in the Official Journal of the European Union, where they are included as annexes A and B to the Commission Regulation. The blacklist of an airline can concern all its flights or some specific aircraft types pertaining to the airline"
          },
          "excludedCarrierCodes": {
            "maxItems": 99,
            "minItems": 1,
            "type": "array",
            "description": "This option ensures that the system will only consider these airlines.",
            "items": {
              "type": "string"
            }
          },
          "includedCarrierCodes": {
            "maxItems": 99,
            "minItems": 1,
            "type": "array",
            "description": "This option ensures that the system will only consider these airlines.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Restriction towards carriers."
      },
      "Co2Emission": {
        "type": "object",
        "properties": {
          "cabin": {
            "$ref": "#/components/schemas/TravelClass"
          },
          "weight": {
            "type": "integer",
            "description": "Weight of Co2 emitted for the concerned segment",
            "example": 90
          },
          "weightUnit": {
            "type": "string",
            "description": "Code to qualify unit as pounds or kilos",
            "example": "KG"
          }
        }
      },
      "Collection_Meta_AvailSearch": {
        "title": "Collection_Meta",
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "ConnectionRestriction": {
        "type": "object",
        "properties": {
          "airportChangeAllowed": {
            "type": "boolean",
            "description": "Allow to change airport during connection",
            "example": false
          },
          "maxNumberOfConnections": {
            "type": "number",
            "description": "The maximal number of connections for each itinerary. Value can be 0, 1 or 2.",
            "example": 2
          },
          "technicalStopsAllowed": {
            "type": "boolean",
            "description": "This option allows the single segment to have one or more intermediate stops (technical stops).",
            "example": true
          }
        },
        "description": "Restriction towards number of connections."
      },
      "CurrencyEntry": {
        "type": "object",
        "additionalProperties": {
          "type": "string",
          "example": "EUR"
        }
      },
      "DateTimeType": {
        "required": [
          "date"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Dates are specified in the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-DD format, e.g. 2018-12-25",
            "format": "date",
            "example": "2018-09-22T00:00:00.000Z"
          },
          "time": {
            "type": "string",
            "description": "Local time. hh:mm:ss format, e.g 10:30:00",
            "example": "10:30:00"
          }
        }
      },
      "Dictionaries": {
        "type": "object",
        "properties": {
          "aircraft": {
            "$ref": "#/components/schemas/AircraftEntry"
          },
          "carriers": {
            "$ref": "#/components/schemas/CarrierEntry"
          },
          "currencies": {
            "$ref": "#/components/schemas/CurrencyEntry"
          },
          "locations": {
            "$ref": "#/components/schemas/LocationEntry"
          }
        }
      },
      "Error_400": {
        "required": [
          "errors"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Issue"
            }
          }
        },
        "example": {
          "errors": [
            {
              "code": 477,
              "detail": "invalid query parameter format",
              "source": {
                "example": "CDG",
                "parameter": "airport"
              },
              "status": 400,
              "title": "INVALID FORMAT"
            }
          ]
        }
      },
      "Error_500": {
        "required": [
          "errors"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Issue"
            }
          }
        },
        "example": {
          "errors": [
            {
              "code": 141,
              "status": 500,
              "title": "SYSTEM ERROR HAS OCCURRED"
            }
          ]
        }
      },
      "Extended_OriginDestinationLight": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OriginDestinationLight"
          },
          {
            "type": "object",
            "properties": {
              "arrivalDateTime": {
                "$ref": "#/components/schemas/DateTimeType"
              },
              "departureDateTime": {
                "$ref": "#/components/schemas/DateTimeType"
              }
            }
          }
        ]
      },
      "Extended_SearchCriteria": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SearchCriteriaLight"
          },
          {
            "type": "object",
            "properties": {
              "class": {
                "type": "string",
                "description": "The code of the booking class",
                "example": "A"
              },
              "includeClosedContent": {
                "type": "boolean",
                "description": "If true, closed booking classes, departed flights and cancelled flights will also be included in the response.",
                "example": false
              }
            }
          }
        ]
      },
      "Extended_Segment": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "availabilityClasses": {
                "title": "AvailabilityClasses",
                "maxItems": 50,
                "minItems": 1,
                "type": "array",
                "description": "List of booking classes for the segment",
                "items": {
                  "$ref": "#/components/schemas/AvailabilityClass"
                }
              },
              "closedStatus": {
                "type": "string",
                "description": "Status of the segment when it is closed.",
                "example": "CANCELLED",
                "enum": [
                  "CANCELLED",
                  "DEPARTED",
                  "NOT_AVAILABLE"
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/Segment"
          }
        ]
      },
      "FlightAvailability": {
        "title": "Flight-availability",
        "required": [
          "id",
          "segments",
          "source",
          "type"
        ],
        "type": "object",
        "properties": {
          "duration": {
            "type": "string",
            "description": "duration in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) PnYnMnDTnHnMnS format, e.g. PT2H10M for a duration of 2h10m",
            "example": "PT2H10M"
          },
          "id": {
            "type": "string",
            "description": "Id of the flight availability",
            "example": "1"
          },
          "instantTicketingRequired": {
            "type": "boolean",
            "description": "If true, inform that a ticketing will be required at booking step.",
            "example": false
          },
          "originDestinationId": {
            "type": "string",
            "description": "Id of the originDestination in query",
            "example": "1"
          },
          "paymentCardRequired": {
            "type": "boolean",
            "description": "If true, a payment card is mandatory to book this flight offer",
            "example": false
          },
          "segments": {
            "title": "Segments",
            "maxItems": 9,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Extended_Segment"
            }
          },
          "source": {
            "$ref": "#/components/schemas/FlightOfferSource"
          },
          "type": {
            "type": "string",
            "description": "the resource name",
            "example": "flight-availability"
          }
        }
      },
      "FlightEndPoint": {
        "title": "FlightEndPoint",
        "description": "departure or arrival information",
        "allOf": [
          {
            "$ref": "#/components/schemas/OriginalFlightEndPoint"
          },
          {
            "type": "object",
            "properties": {
              "at": {
                "type": "string",
                "description": "local date and time in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-ddThh:mm:ss format, e.g. 2017-02-10T20:40:00",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "FlightFiltersLight": {
        "type": "object",
        "properties": {
          "cabinRestrictions": {
            "title": "CabinRestrictions",
            "maxItems": 6,
            "minItems": 1,
            "type": "array",
            "description": "Restriction towards cabins.",
            "items": {
              "$ref": "#/components/schemas/CabinRestriction"
            }
          },
          "carrierRestrictions": {
            "$ref": "#/components/schemas/CarrierRestrictions"
          },
          "connectionRestriction": {
            "$ref": "#/components/schemas/ConnectionRestriction"
          }
        }
      },
      "FlightOfferSource": {
        "type": "string",
        "description": "source of the flight offer",
        "example": "GDS",
        "enum": [
          "GDS"
        ]
      },
      "FlightSegment": {
        "type": "object",
        "properties": {
          "aircraft": {
            "$ref": "#/components/schemas/AircraftEquipment"
          },
          "arrival": {
            "$ref": "#/components/schemas/FlightEndPoint"
          },
          "carrierCode": {
            "maxLength": 2,
            "minLength": 1,
            "type": "string",
            "description": "providing the airline / carrier code",
            "example": "DL"
          },
          "departure": {
            "$ref": "#/components/schemas/FlightEndPoint"
          },
          "duration": {
            "type": "string",
            "description": "stop duration in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) PnYnMnDTnHnMnS format, e.g. PT2H10M",
            "example": "PT2H10M"
          },
          "number": {
            "maxLength": 4,
            "minLength": 1,
            "type": "string",
            "description": "the flight number as assigned by the carrier",
            "example": "212"
          },
          "operating": {
            "$ref": "#/components/schemas/OperatingFlight"
          },
          "stops": {
            "type": "array",
            "description": "information regarding the different stops composing the flight segment. E.g. technical stop, change of gauge...",
            "items": {
              "$ref": "#/components/schemas/FlightStop"
            }
          }
        },
        "description": "defining a flight segment; including both operating and marketing details when applicable"
      },
      "FlightStop": {
        "title": "FlightStop",
        "description": "details of stops for direct or change of gauge flights",
        "allOf": [
          {
            "$ref": "#/components/schemas/OriginalFlightStop"
          },
          {
            "type": "object",
            "properties": {
              "arrivalAt": {
                "type": "string",
                "description": "arrival at the stop in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-ddThh:mm:ss format, e.g. 2017-02-10T20:40:00",
                "format": "date-time"
              },
              "departureAt": {
                "type": "string",
                "description": "departure from the stop in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-ddThh:mm:ss format, e.g. 2017-02-10T20:40:00",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "GetFlightAvailabilitiesQuery": {
        "title": "getFlightAvailabilitiesQuery",
        "required": [
          "originDestinations",
          "sources",
          "travelers"
        ],
        "type": "object",
        "properties": {
          "originDestinations": {
            "title": "originDestinations",
            "maxItems": 6,
            "minItems": 1,
            "type": "array",
            "description": "Origins and Destinations must be properly ordered in time (chronological order in accordance with the timezone of each location) to describe the journey consistently. Dates and times must not be past nor more than 365 days in the future, according to provider settings.Number of Origins and Destinations must not exceed the limit defined in provider settings.",
            "items": {
              "$ref": "#/components/schemas/Extended_OriginDestinationLight"
            }
          },
          "searchCriteria": {
            "$ref": "#/components/schemas/Extended_SearchCriteria"
          },
          "sources": {
            "title": "sources",
            "minItems": 1,
            "type": "array",
            "description": "Allows enable one or more sources. If present in the list, these sources will be called by the system. \nGDS : Full service carriers",
            "example": [
              "GDS"
            ],
            "items": {
              "$ref": "#/components/schemas/FlightOfferSource"
            }
          },
          "travelers": {
            "title": "travelers",
            "maxItems": 18,
            "minItems": 1,
            "type": "array",
            "description": "List of travelers composing the travel",
            "items": {
              "$ref": "#/components/schemas/TravelerInfo"
            }
          }
        },
        "example": {
          "originDestinations": [
            {
              "departureDateTime": {
                "date": "2023-11-14T00:00:00.000Z",
                "time": "21:15:00"
              },
              "destinationLocationCode": "MAD",
              "id": "1",
              "originLocationCode": "BOS"
            }
          ],
          "sources": [
            "GDS"
          ],
          "travelers": [
            {
              "id": "1",
              "travelerType": "ADULT"
            }
          ]
        }
      },
      "Issue": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "an application-specific error code",
            "format": "int64"
          },
          "detail": {
            "type": "string",
            "description": "explanation of the error"
          },
          "source": {
            "title": "Issue_Source",
            "type": "object",
            "properties": {
              "example": {
                "type": "string",
                "description": "a string indicating an example of the right value"
              },
              "parameter": {
                "type": "string",
                "description": "a string indicating which URI query parameter caused the issue"
              },
              "pointer": {
                "type": "string",
                "description": "a JSON Pointer [RFC6901] to the associated entity in the request document"
              }
            },
            "description": "an object containing references to the source of the error"
          },
          "status": {
            "type": "integer",
            "description": "the HTTP status code applicable to this error"
          },
          "title": {
            "type": "string",
            "description": "a short summary of the error"
          }
        }
      },
      "LocationEntry": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/LocationValue"
        }
      },
      "LocationValue": {
        "type": "object",
        "properties": {
          "cityCode": {
            "type": "string",
            "description": "City code associated to the airport",
            "example": "PAR"
          },
          "countryCode": {
            "type": "string",
            "description": "Country code of the airport",
            "example": "FR"
          }
        }
      },
      "OperatingFlight": {
        "type": "object",
        "properties": {
          "carrierCode": {
            "maxLength": 2,
            "minLength": 1,
            "type": "string",
            "description": "providing the airline / carrier code",
            "example": "DL"
          }
        },
        "description": "information about the operating flight"
      },
      "OriginDestinationLight": {
        "type": "object",
        "properties": {
          "destinationLocationCode": {
            "type": "string",
            "description": "Destination location, such as a city or an airport. Currently, only the locations defined in [IATA](http://www.iata.org/publications/Pages/code-search.aspx) are supported.",
            "example": "NYC"
          },
          "excludedConnectionPoints": {
            "maxItems": 3,
            "minItems": 1,
            "type": "array",
            "description": "List of excluded connections points. Any FlightOffer with these connections points will be present in response. Currently, only the locations defined in IATA are supported. Used only by the AMADEUS provider",
            "example": [
              "MRS"
            ],
            "items": {
              "title": "code",
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "example": "1"
          },
          "includedConnectionPoints": {
            "maxItems": 2,
            "minItems": 1,
            "type": "array",
            "description": "List of included connections points. When an includedViaPoints option is specified, all FlightOffer returned must at least go via this Connecting Point. Currently, only the locations defined in IATA are supported. Used only by the AMADEUS provider",
            "example": [
              "MRS"
            ],
            "items": {
              "title": "code",
              "type": "string"
            }
          },
          "originLocationCode": {
            "type": "string",
            "description": "Origin location, such as a city or an airport. Currently, only the locations defined in [IATA](http://www.iata.org/publications/Pages/code-search.aspx) are supported.",
            "example": "PAR"
          }
        }
      },
      "OriginalFlightEndPoint": {
        "type": "object",
        "properties": {
          "iataCode": {
            "type": "string",
            "description": "[IATA airline codes](http://www.iata.org/publications/Pages/code-search.aspx)",
            "example": "JFK"
          },
          "terminal": {
            "type": "string",
            "description": "terminal name / number",
            "example": "T2"
          }
        },
        "description": "departure or arrival information"
      },
      "OriginalFlightStop": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "string",
            "description": "stop duration in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) PnYnMnDTnHnMnS format, e.g. PT2H10M",
            "example": "PT2H10M"
          },
          "iataCode": {
            "type": "string",
            "description": "[IATA airline codes](http://www.iata.org/publications/Pages/code-search.aspx)",
            "example": "JFK"
          }
        },
        "description": "details of stops for direct or change of gauge flights"
      },
      "SearchCriteriaLight": {
        "type": "object",
        "properties": {
          "excludeAllotments": {
            "type": "boolean",
            "description": "This option allows to exclude the isAllotment flag associated to a booking class in the search response when it exist.",
            "example": false
          },
          "flightFilters": {
            "$ref": "#/components/schemas/FlightFiltersLight"
          }
        }
      },
      "Segment": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "blacklistedInEU": {
                "type": "boolean",
                "description": "When the flight has a marketing or/and operating airline that is identified as blacklisted by the European Commission. \n\nTo improve travel safety, the European Commission regularly updates the list of the banned carriers from operating in Europe. It allows any Travel Agency located in the European Union to easily identify and hide any travel recommendation based on some unsafe airlines. \nThe [list of the banned airlines](https://ec.europa.eu/transport/sites/transport/files/air-safety-list_en.pdf) is published in the Official Journal of the European Union, where they are included as annexes A and B to the Commission Regulation. The blacklist of an airline can concern all its flights or some specific aircraft types pertaining to the airline   \n",
                "example": false
              },
              "co2Emissions": {
                "minItems": 1,
                "type": "array",
                "description": "Co2 informations",
                "items": {
                  "$ref": "#/components/schemas/Co2Emission"
                }
              },
              "id": {
                "type": "string",
                "description": "Id of the segment",
                "example": "1"
              },
              "numberOfStops": {
                "type": "integer",
                "description": "Number of stops",
                "example": 0
              }
            }
          },
          {
            "$ref": "#/components/schemas/FlightSegment"
          }
        ]
      },
      "TourAllotment": {
        "title": "TourAllotment",
        "allOf": [
          {
            "$ref": "#/components/schemas/AllotmentDetails"
          },
          {
            "type": "object",
            "properties": {
              "mode": {
                "type": "string",
                "description": "How the allotment can be booked by the Travel Agency.",
                "example": "FREE",
                "enum": [
                  "FREE",
                  "FORCED"
                ]
              },
              "remainingSeats": {
                "type": "number",
                "description": "Number of remaining seats in the allotment.",
                "example": 9
              }
            }
          }
        ]
      },
      "TravelClass": {
        "type": "string",
        "description": "quality of service offered in the cabin where the seat is located in this flight. Economy, premium economy, business or first class",
        "example": "PREMIUM_ECONOMY",
        "enum": [
          "ECONOMY",
          "PREMIUM_ECONOMY",
          "BUSINESS",
          "FIRST"
        ]
      },
      "TravelerInfo": {
        "required": [
          "id",
          "travelerType"
        ],
        "type": "object",
        "properties": {
          "associatedAdultId": {
            "type": "string",
            "description": "if type=\"HELD_INFANT\", corresponds to the adult travelers's id who will share the seat"
          },
          "id": {
            "type": "string",
            "example": "1"
          },
          "travelerType": {
            "$ref": "#/components/schemas/TravelerType"
          }
        }
      },
      "TravelerType": {
        "type": "string",
        "description": "traveler type\nage restrictions : CHILD < 12y, HELD_INFANT < 2y, SEATED_INFANT < 2y, SENIOR >=60y\n",
        "example": "ADULT",
        "enum": [
          "ADULT",
          "CHILD",
          "SENIOR",
          "YOUNG",
          "HELD_INFANT",
          "SEATED_INFANT",
          "STUDENT"
        ]
      }
    },
    "responses": {
      "500": {
        "description": "Unexpected error",
        "content": {
          "application/vnd.amadeus+json": {
            "schema": {
              "$ref": "#/components/schemas/Error_500"
            }
          }
        }
      },
      "400_Search": {
        "description": "code    | title                                 \n------- | ------------------------------------- \n425     | INVALID DATE\n477     | INVALID FORMAT\n572     | INVALID OPTION\n2668    | PARAMETER COMBINATION INVALID/RESTRICTED\n2781    | INVALID LENGTH\n4926    | INVALID DATA RECEIVED\n9880    | SELECTED DATE IS TOO FAR IN THE FUTURE\n10661   | MAXIMUM NUMBER OF OCCURRENCES EXCEEDED \n32171   | MANDATORY DATA MISSING\n",
        "content": {
          "application/vnd.amadeus+json": {
            "schema": {
              "$ref": "#/components/schemas/Error_400"
            }
          }
        }
      },
      "returnAirAvailabilities": {
        "description": "Successful Operation",
        "content": {
          "application/vnd.amadeus+json": {
            "schema": {
              "title": "Success_Availability",
              "type": "object",
              "example": {
                "data": [
                  {
                    "duration": "PT10H35M",
                    "id": "1",
                    "instantTicketingRequired": false,
                    "originDestinationId": "1",
                    "paymentCardRequired": false,
                    "segments": [
                      {
                        "aircraft": {
                          "code": "772"
                        },
                        "arrival": {
                          "at": "2023-11-15T08:05:00.000Z",
                          "iataCode": "LHR",
                          "terminal": "4"
                        },
                        "availabilityClasses": [
                          {
                            "class": "F",
                            "numberOfBookableSeats": 9
                          },
                          {
                            "class": "J",
                            "numberOfBookableSeats": 9
                          },
                          {
                            "class": "I",
                            "numberOfBookableSeats": 9
                          },
                          {
                            "class": "W",
                            "numberOfBookableSeats": 9
                          },
                          {
                            "class": "Y",
                            "numberOfBookableSeats": 9
                          },
                          {
                            "class": "B",
                            "numberOfBookableSeats": 9
                          },
                          {
                            "class": "H",
                            "numberOfBookableSeats": 9
                          },
                          {
                            "class": "K",
                            "numberOfBookableSeats": 9
                          },
                          {
                            "class": "M",
                            "numberOfBookableSeats": 9
                          },
                          {
                            "class": "G",
                            "numberOfBookableSeats": 9
                          },
                          {
                            "class": "X",
                            "numberOfBookableSeats": 9
                          }
                        ],
                        "blacklistedInEU": false,
                        "carrierCode": "6X",
                        "departure": {
                          "at": "2023-11-14T20:25:00.000Z",
                          "iataCode": "BOS",
                          "terminal": "E"
                        },
                        "id": "1",
                        "number": "214",
                        "numberOfStops": 0
                      },
                      {
                        "aircraft": {
                          "code": "320"
                        },
                        "arrival": {
                          "at": "2023-11-15T13:00:00.000Z",
                          "iataCode": "MAD"
                        },
                        "availabilityClasses": [
                          {
                            "class": "J",
                            "numberOfBookableSeats": 9
                          },
                          {
                            "class": "I",
                            "numberOfBookableSeats": 9
                          },
                          {
                            "class": "Y",
                            "numberOfBookableSeats": 9
                          }
                        ],
                        "blacklistedInEU": false,
                        "carrierCode": "6X",
                        "departure": {
                          "at": "2023-11-15T10:30:00.000Z",
                          "iataCode": "LHR"
                        },
                        "id": "2",
                        "number": "9931",
                        "numberOfStops": 0
                      }
                    ],
                    "source": "GDS",
                    "type": "flight-availability"
                  }
                ],
                "dictionaries": {
                  "locations": {
                    "BOS": {
                      "cityCode": "BOS",
                      "countryCode": "US"
                    },
                    "LHR": {
                      "cityCode": "LON",
                      "countryCode": "GB"
                    },
                    "MAD": {
                      "cityCode": "MAD",
                      "countryCode": "ES"
                    }
                  }
                },
                "meta": {
                  "count": 1
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "getOverride": {
        "name": "X-HTTP-Method-Override",
        "in": "header",
        "description": "the HTTP method to apply",
        "required": true,
        "schema": {
          "type": "string",
          "default": "GET"
        }
      }
    }
  },
  "x-generatedAt": "2021-04-02T06:49:58.730Z"
}