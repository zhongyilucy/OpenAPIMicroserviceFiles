{
  "openapi": "3.0.1",
  "info": {
    "title": "Email Subscription API",
    "description": "An API that subscribes emails from an address.",
    "contact": {
      "url": "https://mailsquad.com",
      "email": "support@mailsquad.com"
    },
    "version": "0.9",
    "x-apisguru-categories": [
      "email",
      "marketing"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_528918177711796225_5tzW9XKS.png"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "https://api.inboxroute.com/api/api-docs",
        "version": "2.0"
      }
    ],
    "x-providerName": "inboxroute.com"
  },
  "servers": [
    {
      "url": "https://api.inboxroute.com/api"
    }
  ],
  "security": [
    {
      "mqApiKey": []
    }
  ],
  "paths": {
    "/subscription/{listid}": {
      "post": {
        "tags": [
          "subscription"
        ],
        "description": "Subscribe an email address to a list. This api call has the same behavior as\na regular subscribe form. However, single opt-in is allowed for system integration\npurposes.\n\n- If email address does not exist, a new contact will be added to the list.\n- If email address exists custom fields will be updated and status will be put\n  to unconfirmed or active depending of singleoptin value.\n- If current status if Active, this operation will only update the custom fields.\n- If singleoptin is true, no email confirmation will be sent. In that case,\n  you must provide the subscribe's origin ip and confirmation date-time.\n",
        "parameters": [
          {
            "name": "listid",
            "in": "path",
            "description": "Unique 16 characters ID of the contact list",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Subscription request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Empty response",
            "content": {}
          },
          "401": {
            "description": "Invalid api key or key does not have access to this ressource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "classification": {
                        "type": "string",
                        "description": "Type of error (AccesDenied)"
                      },
                      "message": {
                        "type": "string",
                        "description": "Human readable description of the error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "classification": {
                        "type": "string",
                        "description": "Type of error (Object not found)"
                      },
                      "message": {
                        "type": "string",
                        "description": "Human readable description of the error"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "The request parameters were invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "classification": {
                        "type": "string",
                        "description": "Type of error (ValidationError)"
                      },
                      "message": {
                        "type": "string",
                        "description": "Human readable description of the error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "mqApiKey": []
          }
        ],
        "x-codegen-request-body-name": "subscription"
      }
    }
  },
  "components": {
    "schemas": {
      "Contact": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique 16 characters ID"
          },
          "clientid": {
            "type": "string",
            "description": "Unique 16 characters ID of the client owner"
          },
          "confirmed": {
            "type": "string",
            "description": "Date+time subscriber confirmed his/her list opt-in",
            "format": "date-time"
          },
          "customfields": {
            "type": "object",
            "description": "Dictionnary of field key to value"
          },
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "fullname": {
            "type": "string",
            "description": "Full name (Last name, First Name) of the subscriber\n"
          },
          "ip": {
            "type": "string",
            "description": "Subscriber's IP address when he/she confirmed list opt-in"
          },
          "lang": {
            "type": "string",
            "description": "ISO 639-1 language code of the subscriber. When lang is one the supported system language, all communication\nwill be in this language. \n"
          },
          "listid": {
            "type": "string",
            "description": "Unique 16 characters ID of the list owner"
          },
          "status": {
            "type": "integer",
            "description": "Status (\n  1- Active,\n  2- Unconfirmed,\n  3- Unsubscribed,\n  4- Deleted,\n  5- Cleaned because of hard bounce or spam complaint)\n"
          }
        }
      },
      "ContactAdd": {
        "required": [
          "email",
          "listid"
        ],
        "type": "object",
        "properties": {
          "confirmed": {
            "type": "string",
            "description": "Date+time subscriber confirmed his/her list opt-in",
            "format": "date-time"
          },
          "customfields": {
            "type": "object",
            "description": "Dictionnary of field key to value"
          },
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "ip": {
            "type": "string",
            "description": "Subscriber's IP address when he/she confirmed list opt-in"
          },
          "listid": {
            "type": "string",
            "description": "Unique 16 characters ID of the list owner"
          },
          "status": {
            "type": "integer",
            "description": "Status (\n  1- Active,\n  2- Unconfirmed,\n  3- Unsubscribed,\n  4- Deleted,\n  5- Cleaned because of hard bounce or spam complaint)\n"
          }
        }
      },
      "ContactCustomFieldSchema": {
        "required": [
          "key",
          "label",
          "type"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "equivalent to html form input name attribute"
          },
          "label": {
            "type": "string",
            "description": "User friendly label describing the field"
          },
          "required": {
            "type": "boolean",
            "description": "Is field required"
          },
          "type": {
            "type": "integer",
            "description": "Type (\n  1- String / text free form\n  2- Numeric / integer or decimal\n  3- Date / ISO 8601 format (YYYY/MM/DD)\n)\n"
          }
        }
      },
      "ContactList": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique 16 characters ID"
          },
          "clientid": {
            "type": "string",
            "description": "Unique 16 characters ID of the client owner"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "customfields": {
            "type": "array",
            "description": "Array of ContactCustomFieldSchema",
            "items": {
              "$ref": "#/components/schemas/ContactCustomFieldSchema"
            }
          },
          "eventcustomizations": {
            "type": "array",
            "description": "Array of ContactListEventCustomization",
            "items": {
              "$ref": "#/components/schemas/ContactListEventCustomization"
            }
          },
          "name": {
            "type": "string",
            "description": "Name of the contact list"
          }
        }
      },
      "ContactListEventCustomization": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "redirecturl": {
            "type": "string",
            "description": "full url of the destination landing page"
          },
          "type": {
            "type": "integer",
            "description": "Type (\n  1- Subscribe confirmation request landing page\n  2- Subscribe opt-in landing page\n  3- Unsubscribe confirmation landing page\n)\n"
          }
        }
      },
      "ContactListPage": {
        "type": "object",
        "properties": {
          "page": {
            "type": "array",
            "description": "Array of ContactList for that page",
            "items": {
              "$ref": "#/components/schemas/ContactList"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of items in query"
          }
        }
      },
      "ContactListUpdate": {
        "type": "object",
        "properties": {
          "customfields": {
            "type": "array",
            "description": "Array of ContactCustomFieldSchema",
            "items": {
              "$ref": "#/components/schemas/ContactCustomFieldSchema"
            }
          },
          "eventcustomizations": {
            "type": "array",
            "description": "Array of ContactListEventCustomization",
            "items": {
              "$ref": "#/components/schemas/ContactListEventCustomization"
            }
          },
          "name": {
            "type": "string",
            "description": "Name of the contact list"
          }
        }
      },
      "ContactPage": {
        "type": "object",
        "properties": {
          "page": {
            "type": "array",
            "description": "Array of Contact for that page",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of items in query"
          }
        }
      },
      "ContactUpdate": {
        "type": "object",
        "properties": {
          "confirmed": {
            "type": "string",
            "description": "Date+time subscriber confirmed his/her list opt-in",
            "format": "date-time"
          },
          "customfields": {
            "type": "object",
            "description": "Dictionnary of field key to value"
          },
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "ip": {
            "type": "string",
            "description": "Subscriber's IP address when he/she confirmed list opt-in"
          },
          "status": {
            "type": "integer",
            "description": "Status (\n  1- Active,\n  2- Unconfirmed,\n  3- Unsubscribed,\n  4- Deleted,\n  5- Cleaned because of hard bounce or spam complaint)\n"
          }
        }
      },
      "NewId": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The created ressource id"
          }
        }
      },
      "SubscriptionRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "confirmed": {
            "type": "string",
            "description": "Date-time when subscriber opted-in. Required if singleoptin is true.",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "description": "Email address of the subscriber"
          },
          "fullname": {
            "type": "string",
            "description": "Full name (Last name, First Name) of the subscriber\n"
          },
          "ip": {
            "type": "string",
            "description": "Origin Ip of the subscriber when he/she opted-in. Required if singleoptin is true."
          },
          "lang": {
            "type": "string",
            "description": "ISO 639-1 language code of the subscriber. When lang is one the supported system language, all communication\nwill be in this language.\n"
          },
          "singleoptin": {
            "type": "boolean",
            "description": "If true, no email will be sent asking user subscription confirmation. In that case, you must provide\nthe confirmation date (confirmed) and origin ip (ip) manually.\n"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Invalid api key or key does not have access to this ressource",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "classification": {
                    "type": "string",
                    "description": "Type of error (AccesDenied)"
                  },
                  "message": {
                    "type": "string",
                    "description": "Human readable description of the error"
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "The requested resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "classification": {
                    "type": "string",
                    "description": "Type of error (Object not found)"
                  },
                  "message": {
                    "type": "string",
                    "description": "Human readable description of the error"
                  }
                }
              }
            }
          }
        }
      },
      "422": {
        "description": "The request parameters were invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "classification": {
                    "type": "string",
                    "description": "Type of error (ValidationError)"
                  },
                  "message": {
                    "type": "string",
                    "description": "Human readable description of the error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "mqApiKey": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}