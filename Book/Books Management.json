{
  "openapi": "3.0.1",
  "info": {
    "title": "Books Management",
    "description": "The system that retrieves and manages books in the library system.",
    "version": "0.1"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:5000"
    }
  ],
  "paths": {
    "/api/books": {
      "get": {
        "security": [
          {
            "basic": []
          }
        ],
        "tags": [
          "Books"
        ],
        "summary": "Get all books in the catalog",
        "description": "Get all books in the catalog, filtered by author/title/is_available",
        "parameters": [
          {
            "name": "author",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "Joseph%20Heller"
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "4"
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "Lord%20of%20the%20Flies"
          },
          {
            "name": "is_available",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "example": "True"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation Get Books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "1": {
                    "value": "[\n  {\n    \"author\": \"William Golding\",\n    \"id\": 1,\n    \"is_available\": false,\n    \"title\": \"Lord of the Flies\"\n  },\n  {\n    \"author\": \"J K Rowling\",\n    \"id\": 2,\n    \"is_available\": true,\n    \"title\": \"Harry Potter2\"\n  }\n]\n"
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "http://127.0.0.1:5000"
          }
        ]
      },
      "post": {
        "tags": [
          "Books"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Add a new book to the catalog",
        "description": "Add a new book to the catalog only by Admin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "author": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "0": {
                  "value": "{\n\"title\":\"Book_title\",\n\"author\":\"book_author\"\n}"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation book added"
          },
          "500": {
            "description": "Auto generated using Swagger Inspector"
          }
        },
        "servers": [
          {
            "url": "http://127.0.0.1:5000"
          }
        ]
      },
      "servers": [
        {
          "url": "http://127.0.0.1:5000"
        }
      ]
    },
    "/api/books/{book_id}": {
      "delete": {
        "tags": [
          "Books"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Delete a book from the catalog",
        "description": "Delete a book",
        "parameters": [
          {
            "in": "path",
            "name": "book_id",
            "required": true,
            "description": "ID of the book",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully removing a book",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Book doesnt exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Book doesnt exist"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error removing book",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Error removing book"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "http://127.0.0.1:5000"
          }
        ]
      },
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get book details",
        "description": "Get book details",
        "parameters": [
          {
            "in": "path",
            "name": "book_id",
            "required": true,
            "description": "ID of the book",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfuly get book details",
            "content": {
              "text/html; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          },
          "400": {
            "description": "Invalid book",
            "content": {
              "text/html; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "http://127.0.0.1:5000"
          }
        ]
      },
      "servers": [
        {
          "url": "http://127.0.0.1:5000"
        }
      ]
    }
  },
  "components": {
    "securitySchemes": {
      "basic": {
        "type": "http",
        "scheme": "basic"
      },
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}