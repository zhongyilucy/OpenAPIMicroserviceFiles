{
  "openapi": "3.0.0",
  "servers": [
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://virtserver.swaggerhub.com/JOHNNYYLZHENG/Human_Resource/1.0.0"
    },
    {
      "description": "Simple TCP server for human resources",
      "url": "http://localhost:8888"
    }
  ],
  "info": {
    "title": "Human Resource",
    "description": "This is a simple server that manages human resources data.",
    "contact": {
      "email": "johnnyyl.zheng@moxa.com"
    },
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "profile",
      "description": "About the members of the organization"
    }
  ],
  "paths": {
    "/profile": {
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "Show profiles of all the members",
        "operationId": "getProfile",
        "responses": {
          "200": {
            "description": "SUCCESS",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Members"
                }
              }
            }
          },
          "400": {
            "description": "ERROR",
            "content": {
              "application/": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "profile"
        ],
        "summary": "Add a new member",
        "operationId": "addProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post_member"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "SUCCESS",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Members"
                }
              }
            }
          },
          "400": {
            "description": "ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "profile"
        ],
        "summary": "Update the profile of a member",
        "operationId": "updateProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "SUCCESS",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Members"
                }
              }
            }
          },
          "400": {
            "description": "ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "profile"
        ],
        "summary": "Remove a member",
        "operationId": "delProfile",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "the member with this id will be removed",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Members"
                }
              }
            }
          },
          "400": {
            "description": "ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Members": {
        "required": [
          "message"
        ],
        "properties": {
          "members": {
            "$ref": "#/components/schemas/Member"
          }
        }
      },
      "Member": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Profile"
        }
      },
      "Profile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Johnny"
          },
          "gender": {
            "type": "string",
            "example": "male",
            "enum": [
              "male",
              "female"
            ]
          },
          "age": {
            "type": "integer",
            "format": "int64",
            "example": 27
          },
          "email": {
            "type": "string",
            "example": "johnnyyl_zheng@moxa.com"
          }
        }
      },
      "Post_member": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Johnny"
          },
          "gender": {
            "type": "string",
            "example": "male",
            "enum": [
              "male",
              "female"
            ]
          },
          "age": {
            "type": "integer",
            "format": "int64",
            "example": 27
          },
          "email": {
            "type": "string",
            "example": "johnnyyl_zheng@moxa.com"
          }
        }
      },
      "Error": {
        "required": [
          "message"
        ],
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error_message"
          }
        }
      },
      "Error_message": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "invalid input"
          }
        }
      }
    }
  }
}