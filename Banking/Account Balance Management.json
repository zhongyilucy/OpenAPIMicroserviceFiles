{
  "openapi": "3.0.1",
  "info": {
    "title": "Account Balance Management",
    "description": "This is an API used to get account balance",
    "version": "1.8"
  },
  "tags": [
    {
      "name": "customerAccountBalance"
    }
  ],
  "paths": {
    "/customerAccountBalance": {
      "get": {
        "tags": [
          "customerAccountBalance"
        ],
        "summary": "Retrieves list of Account Balance entities by search criteria",
        "description": "This operation retrieves list of AccountBalance entity",
        "operationId": "listAccountBalance",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Optional. For retrieving billing accounts where the SV_MAPPING: ACCOUNT_HISTORY.EFFECTIVE_START_DATE is greater than or equal to startDate, format: yyyy-mm-ddThh:nn:ss. Note: If startDate is not provided it is defaulted to MIN_DATE.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Optional. For retrieving billing accounts where SV_MAPPING: ACCOUNT_HISTORY.EFFECTIVE_END_DATE is less than or equal to the endDate, format: yyyy-mm-ddThh:nn:ss. If endDate is not provided it is defaulted to MAX_DATE.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "accountId",
            "in": "query",
            "description": "To retrieve data by account id - SV_MAPPING: ACCOUNT_TRE_V.ACCOUNT_ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountName",
            "in": "query",
            "description": "Optional. To retrieve data by account name - SV_MAPPING: ACCOUNT_TRE_V.ACCOUNT_NAME",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortKey",
            "in": "query",
            "description": "To sort the response based on sortKey. Possible values - validFor. These values are retrieved from RT perestapi.imp.customerAccBal.SORT_KEY",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "To sort the response based on sort order. Possible value ascending, descending. Default to descending if sortKey is provided",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Requested index for start of resources to be provided in response",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Requested number of resources to be provided in response",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "scn",
            "in": "query",
            "description": "Oracle system change number used for data read consistency. Default to empty string if configuration item SV_MAPPING: API_CONFIGURATION1.USE_FLASHBACK is not ON",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated properties to be provided in response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "market",
            "in": "query",
            "description": "Market of the accounts",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items matching criteria",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Result-Count": {
                "description": "Actual number of items returned in the response body",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AccountBalance_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not allowed",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountRef": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the transferred account. SV_MAPPING: ACCOUNT_TRE_V.ACCOUNT_ID"
          },
          "href": {
            "type": "string",
            "description": "Reference of the transferred account - <http://<PEREST_HOSTNAME>:<PEREST_PORT>/<Account PEREST URL>/<SV_MAPPING: ACCOUNT_TRE_V.ACCOUNT_ID>"
          },
          "name": {
            "type": "string",
            "description": "Name of the transferred account. SV_MAPPING: ACCOUNT_TRE_V.ACCOUNT_NAME"
          }
        },
        "description": "Account reference. A account may be a party account or a financial account."
      },
      "AccountRelationship": {
        "required": [
          "relationshipType",
          "validFor"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "type": "string",
            "description": "Transferred Account"
          },
          "account": {
            "$ref": "#/components/schemas/AccountRef"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          }
        },
        "description": "Significant connection between accounts."
      },
      "AccountTaxExemption": {
        "required": [
          "issuingJurisdiction",
          "validFor"
        ],
        "type": "object",
        "properties": {
          "issuingJurisdiction": {
            "type": "string",
            "description": "Name of the taxing jurisdiction for which taxes are exempt. SV_MAPPING: TAX_CLASS->TAX_EXEMPT RT"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          }
        },
        "description": "Proof of freedom from taxes imposed by a taxing jurisdiction"
      },
      "BillingAccount": {
        "required": [
          "name",
          "relatedParty"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Http Response Code"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the account. SV_MAPPING: ACCOUNT_TRE_V.ACCOUNT_ID"
          },
          "href": {
            "type": "string",
            "description": "Unique reference of the account - <http://<PEREST_HOSTNAME>:<PEREST_PORT>/<billingAccount PEREST URL>/ACCOUNT_TRE_V.ACCOUNT_ID"
          },
          "accountType": {
            "type": "string",
            "description": "Complete account type name. Example: \"Prepaid (JAM)\". SV_MAPPING: ACCOUNT_TRE_V.ACCOUNT_TYPE_DISPLAY_NAME"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of account. SV_MAPPING: ACCOUNT_TYPE_TRE_V.DESCRIPTION"
          },
          "lastModified": {
            "type": "string",
            "description": "Date of last modification of the account, format: yyyy-mm-ddThh:nn:ss. SV_MAPPING: ACCOUNT_TRE_V.LAST_MODIFIED",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Name of the account. SV_MAPPING: ACCOUNT_TRE_V.ACCOUNT_NAME"
          },
          "market": {
            "type": "string",
            "description": "Market of the account. SV_MAPPING: ACCOUNT_TRE_V.ACCOUNT_NAME"
          },
          "ratingType": {
            "type": "string",
            "description": "Indicates whether the account follows a specific payment option such as prepaid or postpaid. SV_MAPPING: ACCOUNT_TRE_V.ACCOUNT_CLASS_CODE (Account Class RT) | ACCOUNT_TRE_V.ACCOUNT_CATEGORY_CODE (Account Category RT)"
          },
          "state": {
            "type": "string",
            "description": "Contains the lifecycle state. SV_MAPPING: ACCOUNT_TRE_V.ACCOUNT_STATUS_CODE (RT acctbal.ACCOUNT_STATUS)"
          },
          "accountBalance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountBalance"
            }
          },
          "accountRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountRelationship"
            }
          },
          "creditLimit": {
            "$ref": "#/components/schemas/Money"
          },
          "accountCharacteristic": {
            "type": "array",
            "description": "Characteristic name supported: CurrentBalance, UnbilledAmount, TotalInvoiceOverdue, AvailableCredit, TotalDisputed, InvoiceId, InvoiceUnbilledAmount, AccountId, AccountName, accountTypeDisplayName (truncated accountType name, e.g. \"Prepaid\"), AccountTypeId, AccountActionCode, AccountCurrencyId, AccountCurrency, AccountStatusCode, AccountAvailableCredit, AccountBalanceExpiryDate, AccountCancellationDate, AccountFirstUseDate, AccountRestrictionDate. Characteristic value supported: SV_MAPPING: ACCOUNT_TRE_V.ACCOUNT_BALANCE, ACCOUNT_TRE_V.UNBILLED_AMOUNT, Sum of ACCOUNT_HISTORY_TRE_V.CURRENT_DUE, ACCOUNT_TRE_V.AVAILABLE_CREDIT, (ACCOUNT_TRE_V.INVOICE_DISPUTED_AMOUNT + ACCOUNT_TRE_V.ACCOUNT_DISPUTED_AMOUNT), ACCOUNT_TRE_V.INVOICE_ID, ACCOUNT_TRE_V.INVOICE_UNBILLED_AMOUNT, ACCOUNT_TRE_V.ACCOUNT_ID, ACCOUNT_TRE_V.ACCOUNT_NAME, ACCOUNT_TRE_V.ACCOUNT_TYPE_DISPLAY_NAME, ACCOUNT_TRE_V.ACCOUNT_TYPE_ID, ACCOUNT_TRE_V.ACCOUNT_ACTION_CODE, ACCOUNT_TRE_V.ACCOUNT_CURRENCY_ID, ACCOUNT_TRE_V.ACCOUNT_STATUS_CODE, ACCOUNT_TRE_V.AVAILABLE_CREDIT, ACCOUNT_TRE_V.BALANCE_EXPIRY_DATE, ACCOUNT_TRE_V.GENERAL_1, ACCOUNT_TRE_V.FIRST_USE_DATE, ACCOUNT_TRE_V.ACCOUNT_RESTRICTION_DATE. Characteristic value type supported: string. Characteristic unit supported: Unit of measurement of the characteristic value",
            "items": {
              "$ref": "#/components/schemas/AccountCharacteristic"
            }
          },
          "relatedParty": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedParty"
            }
          },
          "taxExemption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTaxExemption"
            }
          },
          "restrictionDate": {
            "type": "string",
            "description": "Date of account is due to change, to a restricted mode of operation, format: yyyy-mm-ddThh:nn:ss. SV_MAPPING: ACCOUNT_TRE_V.ACCOUNT_RESTRICTION_DATE",
            "format": "date-time"
          },
          "balanceExpiryDate": {
            "type": "string",
            "description": "The date and time the current balance of the account is due to expire, format: yyyy-mm-ddThh:nn:ss. SV_MAPPING: ACCOUNT_TRE_V.BALANCE_EXPIRY_DATE",
            "format": "date-time"
          }
        },
        "description": "An account used for billing purposes."
      },
      "AccountBalance_List": {
        "required": [
          "pagination"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationRef"
          },
          "accountBalance": {
            "type": "array",
            "description": "Describes the list of account balance details",
            "items": {
              "$ref": "#/components/schemas/AccountBalance"
            }
          }
        },
        "description": "Account Balance List"
      },
      "AccountBalance": {
        "required": [
          "amount",
          "balanceType",
          "validFor"
        ],
        "type": "object",
        "properties": {
          "balanceType": {
            "type": "string",
            "description": "Type of the balance. E.g.: Invoice, Payment, Adjustment, Statement, Other Transactions. SV_MAPPING: perestapi.BALANCE_TYPE RT. E.g.: Invoice:<ACCOUNT_HISTORY_TRE_V.CUSTOMER_INVOICE_STR>, Payment:<ACCOUNT_HISTORY_TRE_V.RECEIPT_NR>, Adjustment:<ACCOUNT_HISTORY_TRE_V.ADJUSTMENT_NR>, Statement:<ACCOUNT_HISTORY_TRE_V.CUSTOMER_INVOICE_STR>, Other Transactions"
          },
          "id": {
            "type": "integer",
            "description": "Unique Identifier for the balance type. SV_MAPPING: perestapi.BALANCE_TYPE RT. E.g.: Invoice:<ACCOUNT_HISTORY_TRE_V.INVOICE_ID>, Payment:<ACCOUNT_HISTORY_TRE_V.PAYMENT_ID>, Adjustment:<ACCOUNT_HISTORY_TRE_V.ADJUSTMENT_ID>, Statement:<ACCOUNT_HISTORY_TRE_V.INVOICE_ID>, Other Transactions"
          },
          "accountingEntry": {
            "type": "string",
            "description": "Type of account entry. SV_MAPPING: ACCOUNT_TYPE.ASSET_INCREASE_PROMPT is when there is a positive transaction amount or for zero transaction amount when SV_MAPPING: ACCOUNT_TRE_V.ACCOUNT_CLASS_CODE is Asset (ACCOUNT_CLASS RT). SV_MAPPING: ACCOUNT_TYPE.ASSET_DECREASE_PROMPT is when there is a negative transaction amount or for zero transaction amount when SV_MAPPING: ACCOUNT_TRE_V.ACCOUNT_CLASS_CODE is Liability (ACCOUNT_CLASS RT)"
          },
          "amount": {
            "$ref": "#/components/schemas/Money"
          },
          "balanceAmount": {
            "$ref": "#/components/schemas/Money"
          },
          "disputedAmount": {
            "$ref": "#/components/schemas/Money"
          },
          "outstandingAmount": {
            "$ref": "#/components/schemas/Money"
          },
          "statementAmount": {
            "$ref": "#/components/schemas/Money"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "adjustmentReason": {
            "type": "string",
            "description": "Adjustment Reason. SV_MAPPING:Issue.Adj_Reason",
            "x-refdata-source": "RT-adjust.REASON"
          },
          "paymentRejectReason": {
            "type": "string",
            "description": "Payment Reject Reason. SV_MAPPING: Issue.PayRejReason_R",
            "x-refdata-source": "RT-PAYMENT_REJECTED"
          }
        },
        "description": "Balances linked to the account"
      },
      "AccountCharacteristic": {
        "required": [
          "name",
          "value",
          "valueType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the characteristic."
          },
          "valueType": {
            "type": "string",
            "description": "The type of the value provided."
          },
          "value": {
            "type": "string",
            "description": "The value of the characteristic provided as a string. The value of this attribute is depending on the corresponding name attribute value which indirectly determines the correct internal field to map."
          },
          "unit": {
            "type": "string",
            "description": "The unit of measurement of the characteristic."
          }
        },
        "description": "Describes a given characteristic of an object or entity through a name/value/unit."
      },
      "Money": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
          },
          "value": {
            "type": "number",
            "description": "A positive floating point number",
            "format": "float"
          }
        },
        "description": "A base / value business entity used to represent money"
      },
      "RelatedParty": {
        "required": [
          "@referredType",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of a related entity. SV_MAPPING: ACCOUNT_TRE_V.CUSTOMER_NODE_ID"
          },
          "href": {
            "type": "string",
            "description": "Reference of the related entity - <http://<PEREST_HOSTNAME>:<PEREST_PORT>/<Customer PEREST URL>/<SV_MAPPING: ACCOUNT_TRE_V.CUSTOMER_NODE_ID>"
          },
          "name": {
            "type": "string",
            "description": "Name of the related entity. SV_MAPPING: CUSTOMER_NODE_TRE_V.NODE_NAME"
          },
          "@referredType": {
            "type": "string",
            "description": "The actual type of the target instance when needed for disambiguation. SV_MAPPING: perestapi.REFERRED_TYPE->CUSTOMER RT"
          }
        },
        "description": "Related Entity reference. A related party defines party or party role linked to a specific entity."
      },
      "TimePeriod": {
        "type": "object",
        "properties": {
          "endDateTime": {
            "type": "string",
            "description": "End of the time period, using IETC-RFC-3339 format: yyyy-mm-ddThh:nn:ss",
            "format": "date-time"
          },
          "startDateTime": {
            "type": "string",
            "description": "Start of the time period, using IETC-RFC-3339 format: yyyy-mm-ddThh:nn:ss",
            "format": "date-time"
          }
        },
        "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both"
      },
      "PaginationRef": {
        "required": [
          "limit",
          "offset",
          "remainingRecords",
          "scn",
          "totalRecords"
        ],
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "Requested index for start of items to be provided in response"
          },
          "limit": {
            "type": "integer",
            "description": "Requested number of items to be provided in response"
          },
          "remainingRecords": {
            "type": "integer",
            "description": "Remaining number of items to be fetched"
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of items matching criteria"
          },
          "scn": {
            "type": "string",
            "description": "Oracle system change number for read consistency"
          }
        },
        "description": "Query results and paging details."
      },
      "Error": {
        "required": [
          "code",
          "reason"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Application relevant detail, defined in the API or a common list."
          },
          "reason": {
            "type": "string",
            "description": "Explanation of the reason for the error which can be shown to a client user."
          },
          "message": {
            "type": "string",
            "description": "More details and corrective actions related to the error which can be shown to a client user."
          },
          "status": {
            "type": "string",
            "description": "HTTP Error code extension"
          },
          "referenceError": {
            "type": "string",
            "description": "URI of documentation describing the error.",
            "format": "uri"
          },
          "@baseType": {
            "type": "string",
            "description": "When sub-classing, this defines the super-class."
          },
          "@schemaLocation": {
            "type": "string",
            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
            "format": "uri"
          },
          "@type": {
            "type": "string",
            "description": "When sub-classing, this defines the sub-class entity name."
          }
        },
        "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)"
      }
    }
  }
}