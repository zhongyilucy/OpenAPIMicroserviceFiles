{
  "openapi": "3.0.2",
  "info": {
    "title": "Domestic Funds Transfer",
    "description": "This API will be used to transfer funds between domestic bank accounts.",
    "version": "1.1.0"
  },
  "servers": [
    {
      "url": "https://api08.apigateway.dev.bdo.com.ph/corporate/v1",
      "description": "DEV environment"
    },
    {
      "url": "https://api06.apigateway.sit.bdo.com.ph/corporate/v1",
      "description": "SIT environment"
    },
    {
      "url": "https://api17.apigateway.uat.bdo.com.ph/corporate/v1",
      "description": "UAT environment"
    },
    {
      "url": "https://api17.apigateway.bdo.com.ph/corporate/v1",
      "description": "PROD environment"
    }
  ],
  "paths": {
    "/domestic-payments": {
      "post": {
        "tags": [
          "Domestic Funds Transfer"
        ],
        "summary": "Initiate Domestic Funds Transfer",
        "description": "This API endpoint will be used to transfer funds from BDO account to their own account, other BDO account, and other domestic bank account. Use TransferIdentification for the transfer type.",
        "operationId": "Domestic TransferFunds",
        "parameters": [
          {
            "$ref": "#/components/parameters/TransferIdentification"
          },
          {
            "$ref": "#/components/parameters/BusinessProduct"
          },
          {
            "$ref": "#/components/parameters/AccountIdentification"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/ConsumerId"
          },
          {
            "$ref": "#/components/parameters/APIReferenceNumber"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Ids"
          },
          {
            "$ref": "#/components/parameters/Sort"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PaymentInitiationRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200PaymentInitiationResponse"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "OBPaymentInitiation": {
        "type": "object",
        "required": [
          "Data"
        ],
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBPaymentResponse"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "additionalProperties": false
      },
      "OBPaymentInitiationRequest": {
        "type": "object",
        "required": [
          "Data"
        ],
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBPaymentRequest"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBPaymentRequestRisk"
          }
        }
      },
      "OBPaymentRequestRisk": {
        "type": "object"
      },
      "OBPaymentRequest": {
        "type": "object",
        "properties": {
          "ConsentId": {
            "$ref": "#/components/schemas/ConsentId"
          },
          "Initiation": {
            "type": "object",
            "properties": {
              "InstructionIdentification": {
                "$ref": "#/components/schemas/InstructionIdentification"
              },
              "EndToEndIdentification": {
                "$ref": "#/components/schemas/EndToEndIdentification"
              },
              "InstructedAmount": {
                "$ref": "#/components/schemas/InstructedAmount"
              },
              "CreditorAccount": {
                "$ref": "#/components/schemas/OBCashAccount5_0"
              },
              "DebtorAccount": {
                "$ref": "#/components/schemas/OBCashAccount6_1"
              },
              "SupplementaryData": {
                "$ref": "#/components/schemas/OBSupplementaryData"
              }
            }
          }
        },
        "additionalProperties": false
      },
      "OBPaymentResponse": {
        "type": "object",
        "properties": {
          "ConsentId": {
            "$ref": "#/components/schemas/ConsentId"
          },
          "AccountAuthKey": {
            "$ref": "#/components/schemas/AccountAuthKey"
          },
          "TransactionReference": {
            "$ref": "#/components/schemas/TransactionReference"
          },
          "TransferIdentification": {
            "$ref": "#/components/schemas/TransferIdentification"
          },
          "AuthorizationStatus": {
            "$ref": "#/components/schemas/AuthorizationStatus"
          },
          "Status": {
            "$ref": "#/components/schemas/OBAccountStatus1Code"
          },
          "CreationDateTime": {
            "$ref": "#/components/schemas/CreationDateTime"
          },
          "DomesticPaymentId": {
            "$ref": "#/components/schemas/DomesticPaymentId"
          },
          "StatusUpdateDateTime": {
            "$ref": "#/components/schemas/StatusUpdateDateTime"
          },
          "Initiation": {
            "type": "object",
            "properties": {
              "InstructionIdentification": {
                "$ref": "#/components/schemas/InstructionIdentification"
              },
              "EndToEndIdentification": {
                "$ref": "#/components/schemas/EndToEndIdentification"
              },
              "InstructedAmount": {
                "$ref": "#/components/schemas/InstructedAmount"
              },
              "CreditorAccount": {
                "$ref": "#/components/schemas/OBCashAccount5_0"
              },
              "DebtorAccount": {
                "$ref": "#/components/schemas/OBCashAccount6_1"
              },
              "SupplementaryData": {
                "$ref": "#/components/schemas/OBSupplementaryData1"
              }
            }
          }
        },
        "additionalProperties": false
      },
      "ConsentId": {
        "type": "string",
        "description": "Consent ID is a UUID generated to identify each provisioned consent request in the bank"
      },
      "Address": {
        "type": "array",
        "items": {
          "type": "object",
          "description": "Postal address of a party.",
          "required": [
            "Country"
          ],
          "properties": {
            "AddressType": {
              "$ref": "#/components/schemas/OBAddressTypeCode"
            },
            "AddressLine": {
              "type": "array",
              "items": {
                "description": "Information that locates and identifies a specific address, as defined by postal services, that is presented in free format text.",
                "type": "string",
                "minLength": 1,
                "maxLength": 70
              },
              "minItems": 0,
              "maxItems": 5
            },
            "StreetName": {
              "$ref": "#/components/schemas/StreetName"
            },
            "BuildingNumber": {
              "$ref": "#/components/schemas/BuildingNumber"
            },
            "PostCode": {
              "$ref": "#/components/schemas/PostCode"
            },
            "TownName": {
              "$ref": "#/components/schemas/TownName"
            },
            "CountrySubDivision": {
              "$ref": "#/components/schemas/CountrySubDivision"
            },
            "Country": {
              "$ref": "#/components/schemas/CountryCode"
            }
          }
        }
      },
      "PostCode": {
        "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.",
        "type": "string",
        "minLength": 1,
        "maxLength": 16
      },
      "CountrySubDivision": {
        "description": "Identifies a subdivision of a country eg, state, region, county.",
        "type": "string",
        "minLength": 1,
        "maxLength": 35
      },
      "BuildingNumber": {
        "description": "Number that identifies the position of a building on a street.",
        "type": "string",
        "minLength": 1,
        "maxLength": 16
      },
      "CountryCode": {
        "description": "Nation with its own government, occupying a particular territory.",
        "type": "string",
        "pattern": "^[A-Z]{2,2}$"
      },
      "StreetName": {
        "description": "Name of a street or thoroughfare.",
        "type": "string",
        "minLength": 1,
        "maxLength": 70
      },
      "TownName": {
        "description": "Name of a built-up area, with defined boundaries, and a local government.",
        "type": "string",
        "minLength": 1,
        "maxLength": 35
      },
      "OBAddressTypeCode": {
        "description": "Identifies the nature of the postal address.",
        "type": "string",
        "enum": [
          "Business",
          "Correspondence",
          "DeliveryTo",
          "MailTo",
          "POBox",
          "Postal",
          "Residential",
          "Statement"
        ]
      },
      "AccountAuthKey": {
        "description": "OTP reference number if Authentication Type is O or Soft Token if Authentication Type is ST",
        "type": "string",
        "minLength": 1,
        "maxLength": 50
      },
      "InstructionIdentification": {
        "description": "code it specifies for the transaction",
        "type": "string"
      },
      "EndToEndIdentification": {
        "description": "reference it specifies the end to end transaction",
        "type": "string"
      },
      "CurrencyOfTransfer": {
        "description": "reference it specifies currency which was transfered",
        "type": "string"
      },
      "RemittanceInformation": {
        "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.",
        "type": "string",
        "properties": {
          "reference": {
            "type": "string"
          },
          "unstructured": {
            "type": "string"
          }
        }
      },
      "TransactionReference": {
        "description": "Unique reference for the transaction. This reference is optionally populated, and may as an example be the FPID in the Faster Payments context.",
        "type": "string",
        "minLength": 1,
        "maxLength": 210
      },
      "TransferIdentification": {
        "description": "Specifies the business product the corresponds to the type of payment (i.e. Fund Transfer to Own, Fund Transfer to 3rd Party, Domestic Fund Transfer, Cross-Border Transfer)",
        "type": "string"
      },
      "AuthorizationStatus": {
        "description": "Specifies the funds transfer Initiation is success/not.",
        "type": "string"
      },
      "OBAccountStatus1Code": {
        "description": "Specifies the status of account resource in code form.",
        "type": "string",
        "enum": [
          "Deleted",
          "Disabled",
          "Enabled",
          "Pending",
          "ProForma"
        ]
      },
      "CreationDateTime": {
        "description": "Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
        "type": "string",
        "format": "date-time"
      },
      "DomesticPaymentId": {
        "description": "Unique identification as assigned by the ASPSP to uniquely identify the domestic payment ",
        "type": "string"
      },
      "StatusUpdateDateTime": {
        "description": "Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
        "type": "string",
        "format": "date-time"
      },
      "InstructedAmount": {
        "type": "object",
        "required": [
          "Amount",
          "Currency"
        ],
        "description": "Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.",
        "properties": {
          "Amount": {
            "$ref": "#/components/schemas/OBActiveCurrencyAndAmount_SimpleType"
          },
          "Currency": {
            "$ref": "#/components/schemas/ActiveOrHistoricCurrencyCode_1"
          }
        }
      },
      "ActiveOrHistoricCurrencyCode_1": {
        "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
        "type": "string",
        "pattern": "^[A-Z]{3,3}$"
      },
      "AccountId": {
        "type": "string",
        "description": "It is uniqueId to identify the account",
        "minLength": 1,
        "maxLength": 20
      },
      "AccountName": {
        "type": "string",
        "description": "It is uniqueId to identify the account",
        "minLength": 1,
        "maxLength": 35
      },
      "ChargeAmount": {
        "type": "string",
        "description": "It indicates charge amount while transfer the funds",
        "minLength": 1,
        "maxLength": 35
      },
      "OBActiveCurrencyAndAmount_SimpleType": {
        "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
        "type": "string",
        "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$"
      },
      "OBSupplementaryData": {
        "type": "object",
        "properties": {
          "ThirdPartyAccount": {
            "type": "object",
            "properties": {
              "AccountId": {
                "$ref": "#/components/schemas/AccountId"
              },
              "AccountName": {
                "$ref": "#/components/schemas/AccountName"
              }
            }
          },
          "ChargeAmount": {
            "$ref": "#/components/schemas/ChargeAmount"
          },
          "InternalTransferIndicator": {
            "$ref": "#/components/schemas/InternalTransferIndicator"
          },
          "ExternalTransferIndicator": {
            "$ref": "#/components/schemas/ExternalTransferIndicator"
          },
          "ValueDate": {
            "$ref": "#/components/schemas/ValueDate"
          },
          "CustomerReference": {
            "$ref": "#/components/schemas/CustomerReference"
          },
          "PaymentReference": {
            "$ref": "#/components/schemas/PaymentReference"
          }
        }
      },
      "ExternalTransferIndicator": {
        "type": "string",
        "description": "It indicates the external transfer"
      },
      "ValueDate": {
        "type": "string",
        "description": "it indicates the date"
      },
      "CustomerReference": {
        "type": "string",
        "description": "reference it specifies about the customer"
      },
      "PaymentReference": {
        "type": "string",
        "description": "reference it specifies about the payment"
      },
      "OBSupplementaryData1": {
        "type": "object",
        "properties": {
          "ThirdPartyAccount": {
            "type": "object",
            "properties": {
              "AccountId": {
                "$ref": "#/components/schemas/AccountId"
              },
              "AccountName": {
                "$ref": "#/components/schemas/AccountName"
              }
            }
          },
          "ChargeAmount": {
            "$ref": "#/components/schemas/ChargeAmount"
          }
        }
      },
      "OBCashAccount5_0": {
        "type": "object",
        "required": [
          "SchemeName",
          "Identification"
        ],
        "description": "Provides the details to identify the beneficiary account.",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalAccountIdentification4Code"
          },
          "Identification": {
            "$ref": "#/components/schemas/Identification_0"
          },
          "Name": {
            "$ref": "#/components/schemas/Name_0"
          },
          "SecondaryIdentification": {
            "$ref": "#/components/schemas/SecondaryIdentification"
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveCurrencyAndAmount_SimpleType"
          },
          "Currency": {
            "$ref": "#/components/schemas/ActiveOrHistoricCurrencyCode_1"
          }
        }
      },
      "SecondaryIdentification": {
        "description": "This is secondary identification of the account, as assigned by the account servicing institution. \nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).",
        "type": "string",
        "minLength": 1,
        "maxLength": 34
      },
      "Name_0": {
        "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.\nNote, the account name is not the product name or the nickname of the account.",
        "type": "string",
        "minLength": 1,
        "maxLength": 350
      },
      "Identification_0": {
        "description": "Identification assigned by an institution to identify an account. This identification is known by the account owner.",
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "OBExternalAccountIdentification4Code": {
        "description": "Name of the identification scheme, in a coded form as published in an external list.",
        "type": "string",
        "x-namespaced-enum": [
          "UK.OBIE.BBAN",
          "UK.OBIE.IBAN",
          "UK.OBIE.PAN",
          "UK.OBIE.Paym",
          "UK.OBIE.SortCodeAccountNumber"
        ]
      },
      "OBCashAccount6_1": {
        "type": "object",
        "description": "Unambiguous identification of the account of the debtor, in the case of a crebit transaction.",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalAccountIdentification4Code"
          },
          "Identification": {
            "$ref": "#/components/schemas/Identification_0"
          },
          "Name": {
            "$ref": "#/components/schemas/Name_0"
          },
          "SecondaryIdentification": {
            "$ref": "#/components/schemas/SecondaryIdentification"
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveCurrencyAndAmount_SimpleType"
          },
          "Currency": {
            "$ref": "#/components/schemas/ActiveOrHistoricCurrencyCode_1"
          }
        }
      },
      "Links": {
        "required": [
          "Self"
        ],
        "type": "object",
        "properties": {
          "Self": {
            "type": "string",
            "format": "uri"
          },
          "First": {
            "type": "string",
            "format": "uri"
          },
          "Prev": {
            "type": "string",
            "format": "uri"
          },
          "Next": {
            "type": "string",
            "format": "uri"
          },
          "Last": {
            "type": "string",
            "format": "uri"
          }
        },
        "additionalProperties": false,
        "description": "Links relevant to the payload"
      },
      "Meta": {
        "title": "MetaData",
        "type": "object",
        "properties": {
          "TotalPages": {
            "type": "integer",
            "format": "int32"
          },
          "FirstAvailableDateTime": {
            "type": "string",
            "description": "All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          },
          "LastAvailableDateTime": {
            "type": "string",
            "description": "All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Meta Data relevant to the payload"
      },
      "OBErrorResponse1": {
        "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation.",
        "type": "object",
        "properties": {
          "Code": {
            "description": "High level textual error code, to help categorize the errors.",
            "type": "string",
            "minLength": 1,
            "maxLength": 40
          },
          "Id": {
            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors.",
            "type": "string",
            "minLength": 1,
            "maxLength": 40
          },
          "Message": {
            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'",
            "type": "string",
            "minLength": 1,
            "maxLength": 500
          },
          "Errors": {
            "items": {
              "$ref": "#/components/schemas/OBError1"
            },
            "type": "array",
            "minItems": 1
          }
        },
        "required": [
          "Code",
          "Message",
          "Errors"
        ],
        "additionalProperties": false
      },
      "OBError1": {
        "type": "object",
        "properties": {
          "ErrorCode": {
            "description": "Low level textual error code, e.g., UK.OBIE.Field.Missing",
            "type": "string",
            "x-namespaced-enum": [
              "UK.OBIE.Field.Expected",
              "UK.OBIE.Field.Invalid",
              "UK.OBIE.Field.InvalidDate",
              "UK.OBIE.Field.Missing",
              "UK.OBIE.Field.Unexpected",
              "UK.OBIE.Header.Invalid",
              "UK.OBIE.Header.Missing",
              "UK.OBIE.Reauthenticate",
              "UK.OBIE.Resource.ConsentMismatch",
              "UK.OBIE.Resource.InvalidConsentStatus",
              "UK.OBIE.Resource.InvalidFormat",
              "UK.OBIE.Resource.NotFound",
              "UK.OBIE.Rules.AfterCutOffDateTime",
              "UK.OBIE.Rules.DuplicateReference",
              "UK.OBIE.Signature.Invalid",
              "UK.OBIE.Signature.InvalidClaim",
              "UK.OBIE.Signature.Malformed",
              "UK.OBIE.Signature.Missing",
              "UK.OBIE.Signature.MissingClaim",
              "UK.OBIE.Signature.Unexpected",
              "UK.OBIE.UnexpectedError",
              "UK.OBIE.Unsupported.AccountIdentifier",
              "UK.OBIE.Unsupported.AccountSecondaryIdentifier",
              "UK.OBIE.Unsupported.Currency",
              "UK.OBIE.Unsupported.Frequency",
              "UK.OBIE.Unsupported.LocalInstrument",
              "UK.OBIE.Unsupported.Scheme"
            ]
          },
          "Message": {
            "description": "A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future'\nOBIE doesn't standardise this field",
            "type": "string",
            "minLength": 1,
            "maxLength": 500
          },
          "Path": {
            "description": "Recommended but optional reference to the JSON Path of the field with error, e.g., Data.Initiation.InstructedAmount.Currency",
            "type": "string",
            "minLength": 1,
            "maxLength": 500
          },
          "Url": {
            "description": "URL to help remediate the problem, or provide more information, or to API Reference, or help etc",
            "type": "string"
          }
        },
        "required": [
          "ErrorCode",
          "Message"
        ],
        "additionalProperties": false,
        "minProperties": 1
      }
    },
    "requestBodies": {
      "PaymentInitiationRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBPaymentInitiationRequest"
            }
          }
        }
      }
    },
    "responses": {
      "200PaymentInitiationResponse": {
        "description": "Fund transfer Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json; charset=utf-8": {
            "schema": {
              "$ref": "#/components/schemas/OBPaymentInitiation"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBPaymentInitiation"
            }
          },
          "application/jose+jwe": {
            "schema": {
              "$ref": "#/components/schemas/OBPaymentInitiation"
            }
          }
        }
      },
      "200PaymentInitiationInternationalResponse": {
        "description": "Fund transfer Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json; charset=utf-8": {
            "schema": {
              "$ref": "#/components/schemas/OBPaymentInitiationInternational"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBPaymentInitiationInternational"
            }
          },
          "application/jose+jwe": {
            "schema": {
              "$ref": "#/components/schemas/OBPaymentInitiationInternational"
            }
          }
        }
      },
      "400Error": {
        "description": "Bad request",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json; charset=utf-8": {
            "schema": {
              "$ref": "#/components/schemas/OBErrorResponse1"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBErrorResponse1"
            }
          },
          "application/jose+jwe": {
            "schema": {
              "$ref": "#/components/schemas/OBErrorResponse1"
            }
          }
        }
      },
      "401Error": {
        "description": "Unauthorized",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "403Error": {
        "description": "Forbidden",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json; charset=utf-8": {
            "schema": {
              "$ref": "#/components/schemas/OBErrorResponse1"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBErrorResponse1"
            }
          },
          "application/jose+jwe": {
            "schema": {
              "$ref": "#/components/schemas/OBErrorResponse1"
            }
          }
        }
      },
      "404Error": {
        "description": "Not found",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "405Error": {
        "description": "Method Not Allowed",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "406Error": {
        "description": "Not Acceptable",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "415Error": {
        "description": "Unsupported Media Type",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "429Error": {
        "description": "Too Many Requests",
        "headers": {
          "Retry-After": {
            "description": "Number in seconds to wait",
            "schema": {
              "type": "integer"
            }
          },
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "500Error": {
        "description": "Internal Server Error",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json; charset=utf-8": {
            "schema": {
              "$ref": "#/components/schemas/OBErrorResponse1"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBErrorResponse1"
            }
          },
          "application/jose+jwe": {
            "schema": {
              "$ref": "#/components/schemas/OBErrorResponse1"
            }
          }
        }
      }
    },
    "parameters": {
      "x-fapi-auth-date": {
        "name": "x-fapi-auth-date",
        "in": "header",
        "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nSun, 10 Sep 2017 19:43:31 UTC",
        "required": false,
        "style": "simple",
        "explode": false,
        "schema": {
          "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)$",
          "type": "string"
        }
      },
      "x-fapi-customer-ip-address": {
        "name": "x-fapi-customer-ip-address",
        "in": "header",
        "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
        "required": false,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "x-fapi-interaction-id": {
        "name": "x-fapi-interaction-id",
        "in": "header",
        "description": "An RFC4122 UID used as a correlation id.",
        "required": false,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "Authorization": {
        "name": "Authorization",
        "in": "header",
        "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "ConsentId": {
        "name": "ConsentId",
        "in": "path",
        "description": "ConsentId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ConsumerId": {
        "name": "ConsumerId",
        "in": "header",
        "description": "A constant to identify the type of consumer of this API. This will be provide by the service provider at the time of implementation.",
        "schema": {
          "type": "string"
        }
      },
      "AccountIdentification": {
        "name": "AccountIdentification",
        "in": "header",
        "required": false,
        "description": "Customer Identification Number(CIF ID) of selected payer account for transaction initiation. This is only required when passing to system of records.",
        "schema": {
          "type": "string"
        }
      },
      "APIReferenceNumber": {
        "name": "APIReferenceNumber",
        "in": "header",
        "description": "Unique reference number for this API call.",
        "schema": {
          "type": "string"
        }
      },
      "x-customer-user-agent": {
        "name": "x-customer-user-agent",
        "in": "header",
        "description": "Indicates the user-agent that the PSU is using.",
        "required": false,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "x-idempotency-key": {
        "name": "x-idempotency-key",
        "in": "header",
        "description": "Every request will be processed only once per x-idempotency-key.  The\nIdempotency Key will be valid for 24 hours.\n",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "maxLength": 40,
          "pattern": "^(?!\\s)(.*)(\\S)$",
          "type": "string"
        }
      },
      "x-jws-signature": {
        "name": "x-jws-signature",
        "in": "header",
        "description": "A detached JWS signature of the body of the payload.",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "TransferIdentification": {
        "name": "TransferIdentification",
        "in": "header",
        "description": "This indicates what type of Funds Trasfer will be conducted.",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "BusinessProduct": {
        "name": "BusinessProduct",
        "in": "header",
        "description": "A type of product under the type of funds transfer used.",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "Limit": {
        "name": "Limit",
        "in": "query",
        "required": false,
        "description": "The numbers of items to return",
        "schema": {
          "type": "integer"
        }
      },
      "Offset": {
        "name": "Offset",
        "in": "query",
        "required": false,
        "description": "The numbers of items to skip",
        "schema": {
          "type": "integer"
        }
      },
      "Ids": {
        "name": "Id Selection",
        "in": "query",
        "description": "One or more IDs",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "examples": {
          "oneId": {
            "summary": "Example of a single ID",
            "value": [
              5
            ]
          },
          "multipleIds": {
            "summary": "Example of multiple IDs",
            "value": [
              1,
              5,
              7
            ]
          }
        }
      },
      "Sort": {
        "name": "Sort",
        "in": "query",
        "description": "It sorts the list of values",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "-modified",
            "+id"
          ]
        }
      }
    },
    "securitySchemes": {
      "PSUOAuth2Security": {
        "type": "oauth2",
        "description": "OAuth flow, it is required when the PSU needs to perform SCA with the ASPSP when a TPP wants to access an ASPSP resource owned by the PSU",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://authserver.example/authorization",
            "tokenUrl": "https://authserver.example/token",
            "scopes": {
              "accounts": "Ability to read Accounts information3."
            }
          }
        }
      }
    }
  }
}