{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Items API",
    "description": "API to create and retrieve items for autions."
  },
  "servers": [
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://virtserver.swaggerhub.com/OMATJUSHINA_1/Items/1.0.0"
    },
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://virtserver.swaggerhub.com/OMATJUSHINA_1/Auction/1.0.0"
    }
  ],
  "paths": {
    "/items": {
      "post": {
        "description": "Creates new item",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/new_item"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created a new item"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_400"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "description": "Returns a list of items",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limits the number of items on a page",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Specifies the page number of the items to be displayed",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned a list items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/items"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_400"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/items/{item_id}": {
      "get": {
        "description": "Returns an item with certain ID",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "description": "item_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned item description",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/items"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_400"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_404"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "new_item": {
        "required": [
          "item_type",
          "item_name",
          "item_starting_price"
        ],
        "type": "object",
        "properties": {
          "item_type": {
            "type": "string"
          },
          "item_name": {
            "type": "string"
          },
          "item_current_owner": {
            "type": "string"
          },
          "item_starting_price": {
            "type": "integer"
          },
          "item_description": {
            "type": "string"
          }
        }
      },
      "items": {
        "properties": {
          "item_id": {
            "type": "integer"
          },
          "item_type": {
            "type": "string"
          },
          "item_name": {
            "type": "string"
          },
          "item_current_owner": {
            "type": "string"
          },
          "item_starting_price": {
            "type": "integer"
          },
          "item_description": {
            "type": "string"
          }
        }
      },
      "response_400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "response_404": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "API key is missing or invalid",
        "headers": {
          "WWW_Authenticate": {
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}